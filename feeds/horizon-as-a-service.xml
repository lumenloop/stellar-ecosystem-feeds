<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <title type="text">Blog</title>
  <link rel="alternate" type="text/html" href="https://www.withobsrvr.com/blog"/>
  <link rel="self" type="application/atom+xml" href="http://10.0.0.124:3044/?action=display&amp;bridge=CSSLostDateBridge&amp;home_page=https%3A%2F%2Fwww.withobsrvr.com%2Fblog&amp;url_selector=.w-dyn-item+a&amp;url_pattern=%2Fpost%2F.*&amp;content_selector=body+div.rich-text.w-richtext&amp;content_cleanup=&amp;title_cleanup=&amp;date_selector=.cc-blog-date&amp;date_format=F+j%2C+Y&amp;date_selector_index=&amp;author_selector=&amp;remove_styling=on&amp;remove_markup=on&amp;limit=3&amp;format=Atom"/>
  <icon>https://github.com/RSS-Bridge/rss-bridge/favicon.ico</icon>
  <logo>https://github.com/RSS-Bridge/rss-bridge/favicon.ico</logo>
  <id>http://10.0.0.124:3044/?action=display&amp;bridge=CSSLostDateBridge&amp;home_page=https%3A%2F%2Fwww.withobsrvr.com%2Fblog&amp;url_selector=.w-dyn-item+a&amp;url_pattern=%2Fpost%2F.*&amp;content_selector=body+div.rich-text.w-richtext&amp;content_cleanup=&amp;title_cleanup=&amp;date_selector=.cc-blog-date&amp;date_format=F+j%2C+Y&amp;date_selector_index=&amp;author_selector=&amp;remove_styling=on&amp;remove_markup=on&amp;limit=3&amp;format=Atom</id>
  <updated>2025-04-11T22:11:32+00:00</updated>
  <author>
    <name>RSS-Bridge</name>
  </author>
  <entry>
    <title type="html">Obsrvr</title>
    <published>2024-01-20T22:11:32+00:00</published>
    <updated>2024-01-20T22:11:32+00:00</updated>
    <id>https://www.withobsrvr.com/post/guide-for-soroban-rpc-server-on-kubernetes-with-digitalocean</id>
    <link rel="alternate" type="text/html" href="https://www.withobsrvr.com/post/guide-for-soroban-rpc-server-on-kubernetes-with-digitalocean"/>
    <content type="html">PrerequisitesA fully registered domain name with an available A recordExample: rpc.your_domain.comYou can purchase a domain from Namecheap or any domain registrarThis domain will be used to create a custom endpoint for your RPC serverAn API testing client. Recommended: https://httpie.io/Alternative: Postman or curlThis will be used to verify the functionality of your RPC serverIntroductionThis tutorial will guide you through the process of deploying your own Soroban RPC (Remote Procedure Call) server on DigitalOcean&amp;#x27;s Kubernetes platform. Soroban is Stellar&amp;#x27;s smart contract platform, and having your own RPC server allows you to interact with the Stellar network for smart contract operations without relying on public infrastructure.Benefits of deploying your own Soroban RPC server:Increased reliability and uptimeControl over server resources and configurationPotential for better performance compared to public endpointsBy the end of this tutorial, you&amp;#x27;ll have a fully functional Soroban RPC server accessible via your custom domain.‍Target audienceThis tutorial is designed for developers with:Intermediate knowledge of KubernetesBasic familiarity with DigitalOcean&amp;#x27;s cloud platformInterest in Stellar blockchain developmentWhile prior experience with these technologies is helpful, we&amp;#x27;ll provide detailed explanations for each step.‍Step by Step InstructionsStep - Create Kubernetes Cluster in DigitalOceanA Kubernetes cluster on DigitalOcean has one or more node pools. Each node pool consists of a group of identical worker nodes. Worker nodes are built on Droplets. For this tutorial, we can build a cluster with two worker nodes in one node pool.Create Kubernetes cluster in DigitalOcean‍https://docs.digitalocean.com/products/kubernetes/how-to/create-clusters/#create-a-cluster-using-the-control-panela. Log into your DigitalOcean account and navigate to the Kubernetes section.b. Click &amp;quot;Create Cluster&amp;quot; and choose the following settings:Cluster capacity: 2 GB RAM / 1 vCPU per nodeNode count: 2 nodes (minimum for basic redundancy)Datacenter region: Choose the closest to your target usersCluster name: e.g., &amp;quot;soroban-rpc-cluster&amp;quot;c. Click &amp;quot;Create Cluster&amp;quot; and wait for provisioning (this may take several minutes).Rationale: This cluster configuration provides a balance between cost and reliability for a personal RPC server.If you want to create a single node cluster, you will have to select a larger node size.Step - Follow Getting Started with Kubernetes guide under the Overview TabWhile the cluster is being provisioned, we can follow along with the rest of the setup instructions that appear under the Overview tab by clicking on Get StartedGetting StartedConnecting to KubernetesThe first step in connecting to Kubernetes requires additional applications:Install doctlhttps://docs.digitalocean.com/reference/doctl/how-to/install/Install kubectlhttps://kubernetes.io/docs/tasks/tools/Install Helmhttps://helm.sh/docs/intro/install/Verify connectivity to KubernetesIn the DigitalOcean dashboard, go to your cluster&amp;#x27;s &amp;quot;Overview&amp;quot; tabClick &amp;quot;Get Started&amp;quot; and copy the provided doctl commandRun this command in your terminal to configure kubectlRationale: These tools are essential for managing your Kubernetes cluster and deploying applications.Connect to KubernetesConnect to Your Newly Provisioned Cluster Using doctlVerify Connectivitykubectl cluster-infoDisplay addresses of the control plane and cluster servicesdoctl kubernetes cluster listDisplays a variety of commands that help manage your cluster via DigitalOcean&amp;#x27;s APIVerify connectivityStep - Add SDF Helm Chart RepositoryStellar Development Foundation (SDF) provides Helm charts for easy deployment of Stellar applications. Add SDF Helm Chart Repository to Your System:We will first need to add the Helm Chart repository to our system using the following helm commands:The helm repo add command adds the chart repository to your local Helm registryhelm repo add stellar https://helm.stellar.org/chartsThe helm repo update command updates the information of available charts locally from the chart repositories you have added to your Helm registry.helm repo updateAdd and update Helm repoRationale: This step allows you to easily install and manage Stellar applications on your Kubernetes cluster.Step - Deploy Soroban RPC WorkloadNow that we have added the SDF chart repository to our local registry and updated the charts that are available to us, we can now deploy a workload using one of the charts available.a. Create a local deployment configuration file:Start with the testnet configuration: https://github.com/stellar/helm-charts/blob/main/charts/soroban-rpc/testnet-values.yamlSave this as soroban-rpc-values.yaml on your local machineSince we will be connecting our RPC server to testnet, we can uncomment update Soroban RPC image tag to the latest version sorbanRpc:  ....    tag: latestUpdate configFor the ingress section in the configuration file, add your fully registered domain name for the host valuehost: rpc.your_domainWe also want to uncomment and update the Ingress class name ingressClassName:nginxAfter we have finished with our configuration file, we can use that to install Soroban RPC into our Kubernetes clusterhelm install my-soroban-rpc stellar/soroban-rpc --values=testnet-values.yamlHelm install of Soroban RPCRationale: This configuration sets up your RPC server to use the latest version and prepares it for public access via your domain.Step - Verify the Service Is Up and RunningCheck the status of your servicekubectl get service‍Check the status of your podskubectl get pods‍You should see pods related to Soroban RPC in a &amp;quot;Running&amp;quot; state.Step - Installing the Kubernetes Nginx Ingress Controllerhttps://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-on-digitalocean-kubernetes-using-helmEven though we have verified that our service is running on our cluster in the previous step, we still cannot access the service from the outside. For that we will need to create an ingress, an ingress is a way for us to expose our service to the outside world. We will use the nginx ingress and we will first need to add the Nginx Helm Chart Repository to our system.The Nginx Ingress Controller manages external access to your services.Add Nginx Ingress Helm Chart Repository to Your System:helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx helm repo update‍We can now install the nginx ingress into our Kubernetes clusterhelm install nginx-ingress ingress-nginx/ingress-nginx --set controller.publishService.enabled=trueInstall Nginx ingressRun this command to watch the load balancer become available. This process creates a load balancer in the cluster resource group in DigitalOcean.kubectl --namespace default get services -o wide -w nginx-ingress-ingress-nginx-controllerWatch for ingress creation‍Rationale: The Ingress Controller allows external traffic to reach your RPC server securely.Step - Update DNS records to point to DigitalOcean loadbalancera. Go to your domain registrar&amp;#x27;s DNS management page.b. Create an A record:Name: rpc (or your chosen subdomain)Value: The External-IP from the previous stepc. Save the changes and wait for DNS propagation (can take up to 48 hours, but often much faster).Rationale: This step connects your domain name to the DigitalOcean load balancer, allowing access to your RPC server.‍Step - Verify You Can Connect to RPC Service Through Your Fully Qualified DomainOnce DNS has propagated, test your RPC server:http POST https://rpc.your_domain jsonrpc="2.0"  id=867 method="getHealth"Step - CleanupIf you need to remove the deployment:Delete Helm releaseshelm uninstall soroban-rpc helm uninstall nginx-ingress‍Delete the Kubernetes cluster in the DigitalOcean dashboard.Remove the DNS A record from your domain registrar.Maintenance TipsRegularly update your Soroban RPC server:helm repo update helm upgrade soroban-rpc stellar/soroban-rpc -f soroban-rpc-values.yamlMonitor cluster health using DigitalOcean&amp;#x27;s dashboard or kubectl commands.Set up log aggregation for easier troubleshooting.Additional Resources:‍https://docs.digitalocean.com/products/kubernetes/how-to/create-clusters/#create-a-cluster-using-the-control-panel‍https://www.digitalocean.com/community/tutorials/how-to-set-up-an-nginx-ingress-on-digitalocean-kubernetes-using-helm‍https://docs.digitalocean.com/products/kubernetes/getting-started/operational-readiness/enable-https/‍https://github.com/stellar/helm-charts/ https://soroban.stellar.org/docs‍</content>
  </entry>
  <entry>
    <title type="html">Obsrvr</title>
    <published>2024-08-07T22:11:32+00:00</published>
    <updated>2024-08-07T22:11:32+00:00</updated>
    <id>https://www.withobsrvr.com/post/obsrvr-aims-for-tier-1</id>
    <link rel="alternate" type="text/html" href="https://www.withobsrvr.com/post/obsrvr-aims-for-tier-1"/>
    <content type="html">We&amp;#x27;re excited to announce that Obsrvr has taken a significant step towards becoming a Tier 1 organization on the Stellar network by deploying three full validator nodes. This move demonstrates our commitment to enhancing the decentralization, security, and reliability of the Stellar ecosystem.Our three validator nodes, OBSRVR Validator 1, 2, and 3, are now live and actively participating in the Stellar Consensus Protocol. Each node is geographically dispersed to ensure redundancy and maintain network stability even in the event of localized issues.Key details about our validators:Home Domain: stellar.withobsrvr.comNode Addresses:core-live-1.nodeswithobsrvr.co:11625core-live-2.nodeswithobsrvr.co:11625core-live-3.nodeswithobsrvr.co:11625Public Keys:GDRCZ4IPJR7V3HK4GR45CRTE72SDAOZUF2TDBQ5E5IGWC4KM5TSKU2LSGA2PU4UGMLSFUXGZATHPTDXXX7FOHBAQC57RSJCQUN72WFKTD6CEPQSFGACM6GIRMLXBBZIYJXBDTAEYZ2GJP3JJP5G5K4WDPBS6QFHPJNK6S2FBEach validator also maintains its own history archive, further contributing to the network&amp;#x27;s resilience and data availability.By running these validators, we aim to:Strengthen the Stellar network&amp;#x27;s decentralizationEnhance network security and reliabilityContribute to the robust quorum intersection necessary for network healthSupport the growth and development of the Stellar ecosystemWe invite other Stellar validators to consider adding our nodes to their quorum sets. You can find detailed information about our organization and validators on StellarBeat: https://stellarbeat.io/organizations/341fdc78bd09a5c0f0f421e5bb643882As we work towards Tier 1 status, we&amp;#x27;re committed to maintaining high uptime, staying responsive to network updates, and actively participating in the Stellar validator community. We believe that by increasing the number of trusted validators, we can collectively build a stronger, more resilient Stellar network for all users and developers.Stay tuned for more updates as we continue our journey towards becoming a Tier 1 organization on Stellar!‍</content>
  </entry>
  <entry>
    <title type="html">Obsrvr</title>
    <published>2023-12-05T22:11:32+00:00</published>
    <updated>2023-12-05T22:11:32+00:00</updated>
    <id>https://www.withobsrvr.com/post/obsrvr-empowers-businesses</id>
    <link rel="alternate" type="text/html" href="https://www.withobsrvr.com/post/obsrvr-empowers-businesses"/>
    <content type="html">IntroductionBlockchain technology has revolutionized the way businesses operate and has unleashed a new wave of innovation across various industries. As organizations strive to leverage the benefits of blockchain, Obsrvr emerges as a leading provider of blockchain infrastructure solutions tailored for Stellar.org and the Soroban smart contracts platform. Obsrvr&amp;#x27;s cutting-edge technologies and comprehensive offerings enable businesses to seamlessly integrate with the Stellar blockchain, empowering them to unlock new opportunities and drive innovation.Simplifying Blockchain AdoptionOne of the key challenges faced by businesses looking to adopt blockchain technology is the complexity associated with its implementation. Obsrvr addresses this challenge by providing a range of robust solutions that simplify the development process and enhance security measures.Obsrvr Gateway: A Secure Bridge to Stellar Blockchain and SorobanThe Obsrvr Gateway is a managed offering that combines the Horizon API server and Soroban RPC server. By seamlessly integrating these components, businesses gain a secure and hassle-free experience when accessing and interacting with the Stellar blockchain and Soroban&amp;#x27;s smart contract capabilities. The Obsrvr Gateway acts as a secure bridge, providing businesses with the necessary tools to effectively harness the power of Stellar.org.Obsrvr Nodes: Customizable Solutions for Enhanced ControlFor organizations that require enhanced control, scalability, and customization options, Obsrvr offers Obsrvr Nodes. These dedicated instances of the Horizon API and Soroban RPC Server provide businesses with the flexibility to tailor their blockchain infrastructure to meet their unique requirements. With Obsrvr Nodes, organizations can optimize their performance and control over their blockchain operations.Enabling Businesses to Maximize the Potential of Stellar.org and SorobanBy partnering with Obsrvr, businesses can focus on their core competencies while leveraging the full potential of Stellar.org and Soroban. The comprehensive range of solutions offered by Obsrvr simplifies blockchain adoption, facilitating seamless integration and driving innovation. With Obsrvr&amp;#x27;s robust infrastructure solutions, businesses can confidently explore new opportunities and create tangible value across various industries.ConclusionAs businesses increasingly recognize the benefits of blockchain technology, Obsrvr stands at the forefront, delivering cutting-edge blockchain infrastructure solutions for Stellar.org and the Soroban smart contracts platform. Through its Obsrvr Gateway and Obsrvr Nodes, Obsrvr empowers businesses to leverage the power of the Stellar blockchain and Soroban smart contracts, while simplifying the development process and enhancing security measures. By partnering with Obsrvr, businesses can embrace blockchain technology and unlock new opportunities for growth and innovation.To learn more about Obsrvr and its blockchain infrastructure solutions for Stellar.org, visit withobsrvr.com.</content>
  </entry>
</feed>
