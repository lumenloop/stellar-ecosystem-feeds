<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <title type="text">Venture23 - Medium</title>
  <link rel="alternate" type="text/html" href="https://medium.com/venture23?source=rss----4e4db6b85d00---4"/>
  <link rel="self" type="application/atom+xml" href="http://10.0.0.124:3044/?action=display&amp;bridge=FeedFinderBridge&amp;url=https%3A%2F%2Fmedium.com%2Fventure23&amp;strip=on&amp;_cache_timeout=3600&amp;format=Atom"/>
  <icon>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</icon>
  <logo>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</logo>
  <id>http://10.0.0.124:3044/?action=display&amp;bridge=FeedFinderBridge&amp;url=https%3A%2F%2Fmedium.com%2Fventure23&amp;strip=on&amp;_cache_timeout=3600&amp;format=Atom</id>
  <updated>2025-04-11T22:07:34+00:00</updated>
  <author>
    <name>RSS-Bridge</name>
  </author>
  <entry>
    <title type="html">Building and Testing on Aleo Blockchain with DokoJS: A Guide</title>
    <published>2025-01-31T08:59:47+00:00</published>
    <updated>2025-01-31T08:59:47+00:00</updated>
    <id>https://medium.com/venture23/building-and-testing-on-aleo-blockchain-with-dokojs-a-guide-907c4993f967?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/building-and-testing-on-aleo-blockchain-with-dokojs-a-guide-907c4993f967?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Venture23</name>
    </author>
    <content type="html">Aleo blockchain has been making waves in the decentralized world, offering a platform for building private, scalable, and secure applications. As with any emerging technology, developers face challenges in testing and deploying their applications efficiently. Enter DokoJS, a tool designed to streamline the development process on Aleo.This article delves into how DokoJS simplifies Aleo blockchain interactions, making it a must-have in a developer’s toolkit.Introduction to DokoJSDokoJS, inspired by the Nepali word “DOKO” which means a straw basket, is a testament to its purpose — to assist developers in “carrying” their development tasks with ease. It is a specialized library that provides a simplified CLI (Command Line Interface) for interacting with the Aleo blockchain.Key Features:Simplified interaction with Aleo blockchain environmentsStreamlined testing and deployment of Leo programsGeneration of TypeScript classes for Leo programsElimination of the need to specify argument types manuallyFacilitation of output validation through return valuesThe Problem DokoJS SolvesDeveloping on the Aleo blockchain, particularly with the Leo programming language, presents unique challenges. Consider a simple Leo program that adds two numbers. Testing and running this program involves compiling it into Aleo instructions, a process that, while straightforward, becomes cumbersome with more complex applications involving records or arrays as parameters.Challenges Identified:The output of Leo programs is printed on the terminal, making it difficult to use further in the development process.The need to postfix parameter types adds to the complexity.For more complex operations, especially those involving private transactions or records, the command line becomes cluttered and less intuitive.DokoJS addresses these challenges by providing a development environment that abstracts away the complexity, making the developer’s life easier.DokoJS in ActionLet’s illustrate how DokoJS simplifies the process with a couple of examples:Before DokoJS:Running a simple addition program in Leo requires manual execution through the CLI, specifying types and dealing with terminal outputs. Let’s go through a simple example that showcases the example.The following program adds two numbers and returns the output:program sample_program.aleo {transition main(public a: u32, b: u32) -&amp;gt; u32 {let c: u32 = a + b;return c;}}To test the function, we would first need to build the Leo program, be in the build directory, and run the following commandLet’s outline the command and output:Remember the function nameRemember the argument types and orderUnreusable output valueWith DokoJS:DokoJS allows developers to interact with their Leo programs through TypeScript, providing a more intuitive and manageable approach.Getting back to the previous example we discussed on Leo, we can just place the program inside the program&amp;#39;s directory and then run:$&amp;gt; dokojs compileAnd it will:Generate the build (artifacts) folderExpose typescript transpiled for easier contract methods callingAdditionally, when using the exposed contract interface you will following advantages:Create, edit, and update the program in one placeEasier contract interaction from generated typescript classes and methods for the programsHandle the imports of dependent programRemove the need to specify the argument typesReturn the value of execution for validating the output.Deployment of programsLet’s continue with the previous example. Following the guide, you can install and setup DokoJS, and once you add and compile the programs, you can use the generated contract interface (in typescript) and test the function as follows:import { Sample_programContract } from &amp;quot;../artifacts/js/sample_program&amp;quot;;const contract = new Sample_programContract();const output = await contract.main(1, 2);console.log(output); // Prints 3This abstraction makes the code cleaner and allows for the outputs to be programmatically accessed and utilized further in the application.Getting Started with DokoJSPrerequisites:Rust: Required for compiling Leo programs.Leo Language: For writing smart contracts on Aleo.Installation:DokoJS can be installed via NPM or directly from the source:$ » npm install -g @doko-js/cli@latestOr, for the latest development version:$ » git clone https://github.com/doko-js/dokojs$ » pnpm install &amp;amp;&amp;amp; pnpm buildInitializing a DokoJS Project:To start a new project, simply run:$ » dokojs init &amp;lt;project-name&amp;gt;This command sets up the project structure, including directories for contracts, programs, scripts, tests, and configuration files.Workflow with DokoJSInitialize Project: Set up your project structure.Add Programs: Easily add new Leo programs to your project.Modify Programs: Edit your Leo programs as needed.Compile Programs: Compile your programs into JavaScript bindings and Aleo instructions.Write and Run Tests: Test your programs with ease.ConclusionDokoJS represents a significant leap forward in Aleo blockchain development, addressing key pain points and streamlining the workflow. By abstracting complex CLI operations into a more developer-friendly interface, DokoJS not only enhances productivity but also opens up the Aleo platform to a wider audience of developers.For those looking to dive deeper into DokoJS and Aleo development, exploring the official documentation and engaging with the community can provide valuable insights and support.Useful Links:DokoJS GitHub: https://github.com/doko-js/dokojsDokoJS Demo (HouseofZK): https://www.youtube.com/watch?v=HdbtZUCjhL0Aleo Official Website: https://www.aleo.orgLeo Programming Language: https://leo-lang.orgEmbrace the future of private, secure, and scalable blockchain applications with DokoJS and Aleo.Connect With Us:Twitter/X: https://x.com/venture23Website: https://dokojs.venture23.xyz/Building and Testing on Aleo Blockchain with DokoJS: A Guide was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">The Future of Decentralized Commerce with Kiosk on the SUI Blockchain</title>
    <published>2024-11-16T03:54:23+00:00</published>
    <updated>2024-11-16T03:54:23+00:00</updated>
    <id>https://medium.com/venture23/the-future-of-decentralized-commerce-with-kiosk-on-the-sui-blockchain-eb9f67c3c8d2?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/the-future-of-decentralized-commerce-with-kiosk-on-the-sui-blockchain-eb9f67c3c8d2?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Narahari Sijapati</name>
    </author>
    <content type="html">Kiosk is an innovative decentralized platform redefining the way digital assets are bought and sold on the SUI blockchain. Designed to empower creators, Kiosk allows individuals to set up digital storefronts, transforming how digital assets like NFTs, digital art, music, and more are traded.Through their unique Kiosks, creators gain full control over their digital assets, crafting their own terms of engagement, including pricing, royalties, and transfer policies. In this article, we’ll explore how Kiosk is reshaping the future of decentralized commerce and the opportunities it brings to the digital marketplace.How Kiosk Works: Core ComponentsKiosk operates through three primary components, each of which forms a crucial part of its decentralized marketplace:1. Kiosk: Each kiosk acts as a digital storefront, owned and managed by individual creators or IP holders. It serves as a unique space where they can showcase and sell their digital assets.2. Digital Assets: These are the items or products listed within each kiosk, ranging from NFTs, digital art, music, and collectibles to other digital assets created by the kiosk owner.3. Terms: Kiosk owners set specific trading terms for each asset, including price, royalties, fees, and transfer policies. These terms are enforced on-chain, ensuring compliance and transparency for all transactions.By setting up their Kiosks, creators upload their digital assets, define custom trading terms, and allow buyers to interact directly with their storefronts. With Kiosk’s on-chain terms enforcement, creators have complete control over their business model, fostering a secure and decentralized transaction environment for all participants.Revolutionizing Decentralized CommerceKiosk is addressing some of the most persistent challenges in digital commerce. Its decentralized approach holds significant potential for reshaping the industry:1. Creator ControlKiosk empowers creators by granting them complete control over their assets and terms of trade. This approach tackles issues like royalty enforcement, which has traditionally been challenging on centralized platforms. With Kiosk, creators can set and enforce their desired royalty structures directly.2. Decentralized EcosystemOperating on the SUI blockchain, Kiosk removes intermediaries, enabling direct creator-to-buyer transactions. This approach not only simplifies the process but also promotes a more equitable distribution of profits.3. Transparency and ImmutabilityEvery transaction and term is recorded on the blockchain, guaranteeing transparency and immutability. This means that once terms are set, they are securely enforced on-chain, protecting both creators and buyers from unauthorized changes.4. ComposabilityKiosk’s infrastructure is designed to integrate seamlessly with other decentralized applications and services, enabling a composable ecosystem for digital commerce. Developers can build on top of Kiosk or integrate it with other blockchain solutions, expanding its functionality and utility.Empowering Creators: A Paradigm ShiftKiosk represents a new paradigm in how creators distribute and monetize their digital assets. By offering a decentralized, creator-controlled platform, Kiosk provides creators the power to dictate terms and engage directly with their audiences.Through their Kiosks, creators can: - Showcase a diverse range of assets, from digital art and music to collectibles and NFTs.- Define their preferred trading rules, including pricing, royalties, fees, and transfer terms.- Tailor their business models to align with their unique creative visions.The decentralized nature of Kiosk removes intermediaries, fostering a direct relationship between creators and their audiences. Blockchain-backed transactions add another layer of security and transparency, allowing creators to maintain full ownership of their assets and freeing them from the constraints of centralized platforms.Kiosk Indexer: Enhancing Discoverability and Data InsightsAn essential part of the Kiosk ecosystem is the Kiosk Indexer. This tool enhances the discoverability of assets and provides valuable insights for Kiosk owners, allowing them to make strategic, data-driven decisions.The Kiosk Indexer collects, organizes, and presents data from the SUI blockchain, including information on Kiosks, their owners, listed assets, trading terms, and transaction history. Acting as a centralized repository of on-chain data, it enables creators to analyze and extract insights, making it easier to optimize performance and capitalize on emerging trends within the Kiosk ecosystem.Key Benefits of the Kiosk IndexerThe Kiosk Indexer offers several key functionalities:- Market Trend Analysis: Creators can track market trends and sales volume, gaining insights into the performance of their assets.- Asset Performance Monitoring: The indexer provides data on asset performance, enabling creators to optimize their pricing strategies.- Competitor Analysis: Kiosk owners can benchmark their assets against competitors, gaining a better understanding of the competitive landscape.- Identification of Emerging Trends: By observing emerging trends, creators can adjust their strategies to stay relevant and capitalize on new opportunities.- Data-Driven Decision-Making: Comprehensive analytics enable Kiosk owners to make informed decisions based on real-time data, helping them improve their competitiveness.About KioskIndexer:Website: https://kioskindexer.comTwitter: https://x.com/KioskIndexerTelegram: https://t.me/+TruCZyayV2ExYmE1The Future of Decentralized Commerce with Kiosk on the SUI Blockchain was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Use case of Kiosk Indexer APIs</title>
    <published>2024-11-15T04:00:34+00:00</published>
    <updated>2024-11-15T04:00:34+00:00</updated>
    <id>https://medium.com/venture23/use-case-of-kiosk-indexer-apis-c4c9c9e84c72?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/use-case-of-kiosk-indexer-apis-c4c9c9e84c72?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Narahari Sijapati</name>
    </author>
    <content type="html">The Kiosk API offers several valuable use cases for developers and other participants within the SUI blockchain ecosystem, especially those building, monitoring, or managing decentralized applications (dApps) or digital assets:1. Asset and Inventory ManagementUse Case: Developers can use the API to retrieve and monitor kiosks associated with specific accounts, enabling users to view, manage, or interact with digital assets more effectively.Application: Digital asset managers or NFT marketplaces can integrate this API to offer their users a clear view of the assets they own, including item counts, profit stats, and related metadata. This feature can enhance transparency for users and create a more streamlined asset management experience.2. Data-Driven Decision-Making for dApp BuildersUse Case: Developers can filter kiosks by parameters such as profit or item count, helping them gain insights into the performance and popularity of different kiosks.Application: Game developers or NFT platform operators can analyze which kiosks are generating the most profit or holding the highest item counts. By understanding trends and popular assets, they can refine their offerings, reward high-performing kiosks, or optimize in-game economies.3. Enhanced User Experience with Personalized InterfacesUse Case: By implementing sorting and filtering options, developers can customize how kiosks are displayed to end-users, making navigation easier and more intuitive.Application: An NFT marketplace, for example, could use sorting and filtering to help users find kiosks that match specific criteria (e.g., items with the highest profit or latest additions). This flexibility leads to a more personalized and engaging user experience.4. Monitoring and Tracking Performance Over TimeUse Case: Developers can use the API to track the lifecycle of kiosks, utilizing timestamps like created_at and mutated_at to assess changes over time.Application: Analytics platforms can aggregate data from kiosks to provide insights into the performance of assets over time, enabling users to understand trends, identify high-growth assets, and inform investment or strategic decisions.5. Building Efficient Pagination and Load Management in dAppsUse Case: The pagination feature, with options like page.limit and page.next_cursor, helps developers manage large datasets and improves app performance by loading only necessary data.Application: dApps handling extensive datasets can optimize their load times and user interface responsiveness by implementing efficient pagination. This feature reduces server load and enhances usability for applications with large volumes of assets or kiosks.6. Automated Sorting and Ranking MechanismsUse Case: With sorting options like sort.field and sort.direction, developers can automate ranking and order kiosks by customizable metrics, making it easier to highlight key data points.Application: DeFi and NFT platforms can use automated sorting to rank assets, like displaying the top-grossing or most active kiosks. Users gain immediate access to high-value data, while platforms can promote featured assets or popular kiosks dynamically.7. Optimizing Resource Allocation for StakeholdersUse Case: Stakeholders can analyze the API’s data to evaluate which kiosks or assets are underperforming, helping them make strategic decisions about resource allocation.Application: Investors or asset managers can use data on profits and activity to decide which kiosks to promote, enhance, or retire, optimizing resource distribution and fostering a more efficient ecosystem.About KioskIndexer:Website: https://kioskindexer.comTwitter: https://x.com/KioskIndexerTelegram: https://t.me/+TruCZyayV2ExYmE1Use case of Kiosk Indexer APIs was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Cre8Space — Empowering Creators with SUI</title>
    <published>2024-09-20T14:18:01+00:00</published>
    <updated>2024-09-20T14:18:01+00:00</updated>
    <id>https://medium.com/venture23/cre8space-empowering-creators-with-sui-36975adb2b06?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/cre8space-empowering-creators-with-sui-36975adb2b06?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Magar Saroj</name>
    </author>
    <content type="html">Cre8Space — Empowering Creators with SUIIn the ever-evolving world of content creation, we’ve seen the rise of platforms that help creators engage with their audience, monetize their work, and build communities. But despite all these tools, most creators still face challenges such as high commission fees, lack of ownership and control of their content, censorship, and restrictions.That’s where Cre8Space comes in. Built on the SUI blockchain, Cre8Space is designed to seamlessly transition Web2 content creators into the world of Web3. By integrating SUI technologies like zkLogin for easy Web2-style logins, sponsored transactions to cover transaction fees to interact with SUI blockchain, and Walrus Storage for storing content, Cre8Space allows creators to adopt the opportunities Web3 provides.With Cre8Space, creators can now retain full ownership of their content, monetize directly through token-based transactions, and creators can get engaged in new innovative ways through tools like leaderboards and gamificationLet’s dive into what makes Cre8Space special.Easy Login with zkLoginThe first thing that sets Cre8Space apart is its zkLogin feature, allowing users to register and log in using their Web2 accounts — no crypto wallet needed. This is a game-changer for creators who are new to blockchain, as it eliminates the need for complicated setups and private keys.Sponsored TransactionsOne of the biggest barriers to using blockchain for creators is the cost associated with blockchain transactions while uploading and minting NFTs. Cre8Space solves this by sponsoring creators’ transaction fees. This means creators can upload content and interact with the SUI chain without worrying about paying gas fees. It’s a simple, frictionless experience that makes Cre8space much more accessible to web2 users.Obfuscated Contents for Enhanced PrivacyImagine being able to share a teaser of your work, giving fans just a sneak peek of what’s to come. With obfuscated Contents, Cre8Space allows creators to upload images that are blurred or pixelated, adding an extra layer of intrigue. Fans can decrypt the full image after subscribing to a creator’s space or paying a small fee. This offers a unique way for creators to monetize their work and maintain control over their content’s exposure.Points-Based LeaderboardEngagement is the lifeblood of any creator’s success and Cre8Space rewards that interaction with a points-based leaderboard. In the current version, Cre8Space rewards creators through a point system based on two key factors: the number of likes their content receives and how often their content is referenced in the platform’s AI-powered chat. When users engage with content by liking it or when the AI pulls the creator’s content to answer questions in chat, the creator earns points. These points can be converted into payouts to the creators, providing a straightforward way for creators to monetize their work based on audience engagement and content utility.AI Chatbot for Personalized InteractionTo enhance user experience, Cre8Space includes an AI chatbot that helps fans navigate the platform and find relevant content. The chatbot pulls data from a creator’s uploaded media, allowing fans to ask questions and get answers based on previously uploaded content. Though still in development, the AI feature simplifies the user experience, making it much easier for fans to quickly find what they need.Walrus StorageWalrus, a decentralized storage protocol on the Sui blockchain, offers several advantages over Web2 storage providers like Google Drive or AWS. Unlike traditional centralized systems, Walrus distributes data across multiple nodes, ensuring better resilience, transparency, and protection against failures.Future Usecases for Cre8spaceCre8Space is just getting started. In the future, Cre8space can be used to introduce Personal creator spaces where fans can subscribe for exclusive content, as well as Community spaces for projects and brands to build a loyal fan base, opening up even more possibilities for monetization.A Creator’s Personal SpaceCreator’s Personal Spaces, where fans can subscribe to access exclusive content of their favorite creators. This feature will allow creators to cultivate a closer, more personal relationship with their audience by offering premium content that only paying subscribers can access. With obfuscated content, creators can tease exclusive previews, encouraging fans to subscribe for the full experience. This subscription model opens up new opportunities for monetization, empowering creators to generate consistent revenue while delivering unique, high-quality content to their most dedicated fans.Community SpacesCommunity Spaces are designed for projects, brands, and creators to build a loyal fan base and foster engagement. These spaces will act as hubs where community members can interact, share content, and participate in discussions, all while earning points based on their activity. Brands and projects can use these spaces to reward loyal followers through airdrops, NFT giveaways, and other incentives, creating a healthy relationship between projects and the community.This project was built during the SUI Walrus Devenet Hackathon.Hackathon Website: https://info.breakingtheice.sui.io/Learn more about the project:Website: https://cre8space.walrus.siteGithub: https://github.com/ibriz/cre8SpaceCre8Space — Empowering Creators with SUI was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Knowledge Graph for SUI Grants</title>
    <published>2024-06-11T11:00:23+00:00</published>
    <updated>2024-06-11T11:00:23+00:00</updated>
    <id>https://medium.com/venture23/knowledge-graph-for-sui-grants-9b5410c44aa9?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/knowledge-graph-for-sui-grants-9b5410c44aa9?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Nistha Thapa</name>
    </author>
    <content type="html">Knowledge Graph for SUI Grants by Venture23IntroductionGrants are one of the most crucial elements supporting startups and innovation. With the growing need for grants every day, proper evaluation of grant proposals is essential to ensure that funding is allocated to the most promising project. To address this need, we introduced our project, Knowledge Graph for SUI Grants on SUI Overflow. It leverages Large Language Models (LLMs) and Knowledge Graphs, focusing on the SUI blockchain, to streamline and enhance the grant proposal evaluation process.Problem StatementEvaluating submitted grant proposals is filled with challenges:Proposals often contain repetitive content.Manual evaluation is time-consuming and inefficient.Inefficiency hampers the quick identification of innovative and impactful ideas.Identifying connections between multiple proposals can be difficult.Our SolutionThe Knowledge Graph for SUI Grants addresses these challenges by combining Large Language Models (LLMs) and dynamic Knowledge Graphs. Here’s how it works:Large Language Models (LLMs): LLMs extract detailed information from uploaded proposals, generating entity and relationship schemas. This process provides a clear understanding of the proposals’ content and their interconnections.Knowledge Graphs: These schemas are used to construct dynamic Knowledge Graphs, visualizing relationships and similarities between proposals. This helps identify redundancies and uncover hidden connections.GraphRAG Integration: User queries retrieve structured data from the Knowledge Graph, combining relevant information from documents and generating robust, insightful responses.MethodologyData Extraction: LLMs extract detailed information from proposals.Schema Generation: Entity and relationship schemas are generated to map out the proposal content.Graph Construction: Dynamic Knowledge Graphs are constructed using these schemas, visualizing relationships and similarities.Data Retrieval: GraphRAG integration allows efficient retrieval of structured data from graphs and relevant context from documents generating robust responses to user queries and facilitating decision-making.BenefitsThe Knowledge Graph project offers numerous benefits:Saves Time and Resources: Automates the evaluation process, reducing the time and effort required.Focus on Innovation: Facilitates quick identification of truly innovative projects.Improved Decision-Making: Provides clear insights and visual representations, enhancing decision-making processes.Brainstorming New Ideas: Identifies hidden connections between proposals, inspiring new ideas and collaborations.Impact on SUI FoundationThe Knowledge Graph project significantly enhances the SUI Foundation’s efficiency and effectiveness:Enhanced Efficiency: Streamlines the evaluation process, reducing time and effort.Better Decision-Making: Empowers the foundation with clear, insightful data, improving decision-making.Greater Impact: Helps the foundation fund more innovative projects, driving greater community impact.ConclusionThe Knowledge Graph for SUI Grants is transforming how grant proposals are evaluated. Integrating advanced AI technology, it simplifies the evaluation process and provides valuable insights. This innovative tool helps the Sui Foundation make smarter decisions, fostering greater innovation and impact in the blockchain space.Knowledge Graph for SUI Grants was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">SUIPerks: Daily Perks for a Lifetime</title>
    <published>2024-06-10T17:36:43+00:00</published>
    <updated>2024-06-10T17:36:43+00:00</updated>
    <id>https://medium.com/venture23/suiperks-daily-perks-for-a-lifetime-e564c1e93f16?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/suiperks-daily-perks-for-a-lifetime-e564c1e93f16?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Nistha Thapa</name>
    </author>
    <content type="html">SUIPerks — by Venture23Welcome to SUIPerks, where NFTs meet purpose! SUIPerks is a community-driven platform transforming fundraising and collaboration, but we go beyond just that. SUIPerks addresses the untapped potential of NFTs and the trust issues plaguing existing crowdfunding platforms by offering a decentralized, community-driven solution.By minting unique NFTs daily, we ensure fairness and trust. From supporting personal projects and charitable initiatives to owning sports clubs, SUIPerks empowers everyone to make a difference and have a voice in every decision. Participating in the SUI Overflow event inspired us to conceptualize this project, and now, we’re committed to continuing because of its immense benefits.The SUIPerks SolutionUnlocking Community Governance:Your PERKS, Your Power: Holding a PERKS NFT signifies your role similar to an investor in the company, granting you equal rights to participate in decisions regarding the allocation of treasury funds.Daily Minting: Each day, a single NFT is minted and made available for public bidding. This controlled and limited supply helps maintain market stability and prevents sudden price inflation.Rewarding Engagement with Oxcoin:We incentivize voters and proposal creators with Oxcoin who actively participate in the system, making it a valuable decentralized application.How SUIPerks WorksDaily NFT AuctionDaily Minting: Our platform mints one NFT daily, available for public bidding to ensure fairness and prevent market manipulation.Public Bidding: The daily minted NFT is available for public bidding, ensuring that the community determines the price rather than being manipulated by a few individuals. The highest bid amount goes directly into the community-controlled treasury.Treasury AllocationThe community votes on the best proposals and directly allocates funds, fostering a democratic and transparent environment.Decentralized Autonomous Organization (DAO)Governance: SUIPERKS NFT holders have voting rights and can participate in decisions regarding the allocation of treasury funds. This approach ensures that the community has control over the platform’s direction, promoting transparency and trust.Advanced Management: Using SUI’s transfer-to-object feature, we manage all DAO proposals and interactions effectively.Charitable InitiativesSUIPerks is committed to making a positive impact on society through its innovative platform. Our charitable initiatives are a core aspect of our mission, focusing on supporting those in need and promoting social development.Support: Aid victims of diseases and natural disasters.Development: Promote women’s development programs.Ownership: The treasury can own sports clubs, with players representing the SUIPerks community.Advanced Features with SUIEngagement: NFTs act as gateway passes, requiring users to interact with the system.Efficiency: Seamless transfer of objects and efficient proposal management within the DAO.Transparency and TrustPioneering DAO: One of the first transparent DAOs on SUI.Visibility: User activity is visible to all.Accountability: Identity linked to wallet address and NFTs, ensuring trust and accountability.Open-source Intellectual Property: For the Future Enhancements SUI PERKS extends the concept of open-source IP within the SUI NFT space. By using a Creative Commons CCO “No Rights Reserved” license, SUI PERKS allows anyone to use the SUI PERKS name and characters to create their projects. This contrasts sharply with traditional IP models that tightly control the usage of characters and brands.ConclusionWhether you want to be an investor or raise funds for a personal project, charity event, or sports event, and earn Oxy tokens, Superperks is the ideal platform for you. Don’t miss the opportunity — join us today and become a part of our community.Visit our website to learn more and get started today!SUIPerks: Daily Perks for a Lifetime was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Bringing LocalCoin to SUI</title>
    <published>2024-06-06T07:06:18+00:00</published>
    <updated>2024-06-06T07:06:18+00:00</updated>
    <id>https://medium.com/venture23/bringing-localcoin-to-sui-23b325770f50?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/bringing-localcoin-to-sui-23b325770f50?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Nistha Thapa</name>
    </author>
    <content type="html">LocalCoin is a non-profit local currency system built on the SUI platform. It empowers campaign owners to create custom tokens with spending restrictions. These tokens are backed one-to-one by a stablecoin, ensuring stability, and can be spent by recipients at authorized merchants within the local community. LocalCoin is designed to be fully decentralized, with governance controlled by voting through a Decentralized Autonomous Organization (DAO).Challenges Addressed:Lack of Transparency: Donors often cannot see how their donations are used, leading to distrust and hesitation.Misuse of Funds: Cash assistance can be misappropriated, reducing the intended impact.Leakage of Funds: Unrestricted funds may leave the community, limiting their positive effect.Scaling Issues: Centralized solutions struggle to scale effectively.Privacy Concerns: Communities may be wary of being tracked when they participate.Our Solutions:Closed Loop System: Ensures funds are spent only within the local community.Mobile dApp: Used by both merchants and participants for approved purchases.On-Chain Tracking: All transactions are recorded on the blockchain for full transparency.Spending Restrictions: Funds can only be accepted by approved merchants for specific items.Merchant Redemption: Merchants can redeem local currency for any stable coin that the system supports on demand.Target AudienceLocalCoin is designed for:Standalone Philanthropic Organizations: Ensuring transparency and effective fund usage.NGOs in Developing Countries: Facilitating controlled and impactful fund disbursement.Entities of LocalCoinCampaign Creators:Anyone can become a campaign creator by transferring a certain amount of USDC to the platform, creating a campaign, and minting an equivalent amount of LocalCoin tokens. They can approve participants and manage campaign details.Recipients:Users browse and join campaigns via the app, participate in the campaign, and provide proof of their involvement. Upon verification, they receive LocalCoin tokens, which can be spent with approved merchants.Merchants:Merchants provide goods or services in exchange for LocalCoin tokens. They can burn the tokens to receive an equivalent amount of stablecoin, ensuring the funds are used as intended.Merchant Onboarding:We are building a network of quality merchants, excluding those who sell products like cigarettes or alcohol. Only the super admin/app admin can add merchants to the network.How LocalCoin WorksCampaign Creation: Campaign creators transfer USDC to the platform, creating campaigns and minting LocalCoin tokens.Recipient Participation: Recipients join campaigns, participate, and earn LocalCoin tokens.Merchant Transactions: Recipients spend tokens at approved merchants. Merchants then burn tokens to redeem stablecoin.How SUI Makes LocalCoin AccessibleSUI is a Layer 1 protocol blockchain, ideal for onboarding web2 users due to its unique features:zkLoginThis feature allows users to sign in with their existing web credentials (e.g., Google, Facebook). By using accounts they are already familiar with, it makes the transition to LocalCoin smooth and straightforward for both recipients and merchants, eliminating the need to create new wallets.Sponsored TransactionsLocalCoin offers SUI-sponsored transactions that cover gas fees. This means users don’t have to worry about the additional cost typically associated with blockchain transactions, making it easier and more appealing for them to start using web3 services.Closed Loop Token:Ensures tokens are used as intended, with custom policies restricting usage to recipients, merchants, and campaign creators.Future Plans for LocalCoinMultiple Token Types: Tailored for different regions or cities, depending on community needs.Off-Ramping and On-Ramping: Facilitating direct bank transfers for campaign creators and merchants, simplifying the financial flow.ConclusionLocalCoin is set to transform the way social good organizations manage and utilize funds. By ensuring transparency, preventing misuse, and enabling scalable, decentralized fund management, LocalCoin addresses critical challenges faced by philanthropic efforts worldwide. Our journey at the SUI Overflow Hackathon has been just the beginning. We look forward to further developing LocalCoin and making a meaningful impact on communities around the globe.Get involved today!! Visit our website or explore our GitHub repository.Join our community to stay updated and thank you for your support!Bringing LocalCoin to SUI was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Private Transactions on SUI at the SUI Overflow Hackathon</title>
    <published>2024-06-05T08:28:54+00:00</published>
    <updated>2024-06-05T08:28:54+00:00</updated>
    <id>https://medium.com/venture23/private-transactions-on-sui-at-the-sui-overflow-hackathon-d5cb227d0d35?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/private-transactions-on-sui-at-the-sui-overflow-hackathon-d5cb227d0d35?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Nistha Thapa</name>
    </author>
    <content type="html">IntroductionAlthough blockchain wallets provide a form of pseudo-anonymity to their users, all transactions associated with a given address are publicly visible on the blockchain. This transparency poses a significant challenge to user privacy. Anyone can trace every transaction from a wallet, revealing the entire transaction history once the wallet is linked to an individual.To address these privacy issues, we introduce Private Transactions on SUI, enabling confidential and anonymous transactions. By utilizing zero-knowledge proofs (zk-SNARKs), we ensure that transaction details, including the sender, receiver, and transaction amount, remain hidden from public view, providing a much-needed layer of confidentiality in the SUI ecosystem.Target AudiencePrivate Transactions on SUI target several key user groups within the SUI ecosystem who highly value their financial privacy and wish to keep their transaction history confidential. These groups include:DeFi Enthusiasts and TradersHigh-Net-Worth IndividualsCrypto InvestorsGeneral Crypto UsersCrypto CompaniesOrganizations that handle payrolls via blockchainHow Does the Private Transactions on SUI Work?Let’s suppose, User A wants to send a SUI token to User B using a private transaction. User A goes to the Private Transactions website and connects their wallet. When the wallet is connected, a private zkWallet is also generated from the private keys of User A.Initializing a CommitmentUser A manually initializes a commitment, which includes the zk-address of User A and the amount of SUI tokens to be deposited. For example, User A deposits 100 SUI. The commitment will be:Shielding the SUI TokenThe 100 SUI is then transferred to a common pool, and the commitment is added as a leaf node in a Merkle Tree. An event is emitted, containing encrypted information necessary for the receiver to spend the commitment.Private Transfer of SUI TokensTo privately transfer 10 SUI tokens from User A to User B, the commitment is split into C11 and C12 (Assuming the relayer takes 0 fees at this phase, whereas, in the future, it is a business opportunity for relayer operators).The message is sent to the SUI Chain with the help of a relayer which includes the zkProof of the signature and the proof of proper formation of C11 &amp;amp; C12, ensuring the input value matches the sum of output values.If the zkProof is verified, the nullifier of the commitment C1 is recorded in the blockchain to prevent double-spending. The new commitments C11 and C12 are then added to the Merkle Tree.Unshielding the SUI TokenSuppose User B wants to unshield the 10 SUI tokens received from User A. User B submits zkProof of the signature and zkProof for unshielding. Along with zkProofs, SUI Address (public address) and the amount being unshielded are passed as public parameters.In the chain, if the zkProof of unshielding and signature is verified and asserted (C111 === hash(SUI Address, amount)), then the SUI token is transferred from the pool to the User SUI wallet.Few Key TerminologiesEvent Emission:An event emission contains information in an encrypted form necessary for the receiver to utilize the fund.View Keys:The symmetrically encrypted information can only be decrypted by the sender and the receiver using a shared secret key formed by certain operations on their own private viewing key and the public viewing key of another party.Auditability/Compliance:The private viewing key can be provided to law enforcement agencies or any other body if the account needs to be audited to prove there are no connections with known bad actors.What’s Next for Private TransactionSupport Fungible and Non-Fungible(NFT) tokens for private transfersIntegrate private interaction with De-Fi apps and other third-party appsUse waku-like protocol for secure transaction processing via relayerIntegrate PPOI(Private Proof of Innocence) mechanism to filter out bad actorsConclusionParticipating in the SUI Overflow Hackathon allowed us to address a critical need for privacy in blockchain transactions. Through our project, Private Transactions on SUI, we demonstrated how zero-knowledge proofs (zk-SNARKs) can enable confidential and anonymous transactions, safeguarding user privacy.We have successfully developed and tested our solution on Devnet, showcasing its potential to protect transaction details from public view. The hackathon experience provided valuable feedback and validated the importance of our work.Moving forward, we are excited to further refine and implement Private Transactions on SUI, aiming to enhance user privacy and security on the SUI blockchain.Thank you for your support, and stay tuned for more updates!Private Transactions on SUI at the SUI Overflow Hackathon was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Venture23 Announces SUI Overflow Kickoff Party</title>
    <published>2024-05-10T08:31:48+00:00</published>
    <updated>2024-05-10T08:31:48+00:00</updated>
    <id>https://medium.com/venture23/venture23-announces-sui-overflow-kickoff-party-bc10436a5109?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/venture23-announces-sui-overflow-kickoff-party-bc10436a5109?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Venture23</name>
    </author>
    <content type="html">On March 10th, 2024, Venture23 organized an in-house kickoff party for SUI Overflow, one of the first global virtual hackathons organized by SUI itself. SUI Overflow brings together builders and developers worldwide to redefine innovation, performance, and ownership on Web3’s most expressive, powerful, and composable platform.The kickoff party was joined by various guests from the SUI Foundation and their teams from across the world, including Jason Wong, Harrison Kim, and Daniel Lam.The kickoff party introduced the teams from Venture23 participating in the hackathon. Each team delivered a 5-minute presentation introducing themselves, their current work status, and plans.Here’s a short description of each project:Beat down INC:An active PvE game where characters strategize against opponents by adjusting stats.Unlock powerful weapons by winning matches and collecting Respect points across three lives.Upon death, characters join the NPC pool, challenging new players in Beatdown Inc. and collecting rewards for each victory.Objective: Build the perfect stats for your character and defeat opponents to climb the leaderboard.Private Transactions on SUI:Enhance privacy and security within transactions on the SUI platform.Foster trust and confidence among participants by fortifying user privacy and confidentiality.Objectives: Convert public coins to shielded tokens, create privacy wallets, and transfer value to private wallets using shielded tokens, and unshielded tokens.LocalCoin:A closed-cycle token system designed to enable on-chain control and tracking of financial incentives in the real world.Manage the disbursement of funds with restrictions on how they may be spent, comprising smart contracts on Soroban, a web app, a mobile app, and eventually a payment card and seamless DAO integration.EthenaDAO:A DAO platform built on the SUI blockchain and a crowdfunding platform for project funding through the auction of NFTs.Empower users by giving them ownership over the platform and enabling them to propose and vote on funding proposals.Smart Contracts: Ethena NFT, Ethena Treasury, Ethena DAO, and Ethena Auction.SUI Community Engagement PlatformSUI Community Engagement Platform interprets user interactions into actionable insights, driving Sui’s growth through informed decision-making and strategic community nurturing.Advanced analytics for deep sentiment understanding.Content analysis to drive focused community discussions and product enhancements.Knowledge Graph for Sui Grants:Employing Knowledge Graphs and Large Language Models (LLMs) to effectively encapsulate the content of grant proposals.Generating relationships between multiple proposals and features within the ecosystem — SUI ecosystemUtilize graph visualization to extract insights for innovative idea generation and understanding user queries.Connect multiple data sources and retrieve relevant information for responding to complex user queries.The kickoff party was a success, and we are looking forward to working on all of these projects in the coming month and sharing all that we have with the SUI community in the future.Venture23 Announces SUI Overflow Kickoff Party was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">DOKOJS: ALEO Blockchain Development Framework</title>
    <published>2024-04-18T15:12:35+00:00</published>
    <updated>2024-04-18T15:12:35+00:00</updated>
    <id>https://medium.com/venture23/dokojs-aleo-blockchain-development-framework-51ea902119d5?source=rss----4e4db6b85d00---4</id>
    <link rel="alternate" type="text/html" href="https://medium.com/venture23/dokojs-aleo-blockchain-development-framework-51ea902119d5?source=rss----4e4db6b85d00---4"/>
    <author>
      <name>Sandesh Pokhrel</name>
    </author>
    <content type="html">OverviewIn the world of blockchain development, having the right tools can make all the difference. Just like how Ethereum developers rely on frameworks like Hardhat for smooth sailing, those diving into the Aleo blockchain have a similar thing called DOKOJS.Think of DokoJS as a developer environment for crafting and testing programs(similar to contracts in EVM) on the Aleo blockchain. Similar to hardhat you will be writing your programs in Leo language(Programming language for Aleo blockchain programs) and writing all other scripts like deployment, and testing in TypeScript. It’s like bringing your favorite JavaScript and TypeScript skills to a new playground, where you can build awesome decentralized applications (dApps) and programs with ease.This article is your ticket to understanding DokoJS. We’ll walk you through what it is, how it works, and why it’s a game-changer for developers wanting to explore the Aleo ecosystem.What is Aleo Blockchain?Here is how the Aleo team put themselves:The Aleo network is devoted to educating the public on the potential of applied cryptography and specifically zero-knowledge proofs in the context of decentralized technologies like the internet.Its mission is to encourage an educational sandbox in which to explore this new but important design space, and to inspire and educate a diverse generation of developers (and aspiring developers) to explore the promise and potential of these technologies for promoting the public good.It will do this by promoting awareness of open-source tool kits that leverage this technology, encouraging related training, fostering an open-source ecosystem of related technologies, and funding grants that help promote or leverage this technology.For developers what does Aleo provide:For developers seeking to harness the power of privacy-focused applications, Aleo offers a unique proposition. Imagine being able to write programs where sensitive computations occur off-chain, shielded from prying eyes, while providing irrefutable proof on-chain that these computations have indeed taken place. This paradigm shift empowers developers to build decentralized applications (dApps) that not only safeguard private data but also ensure its integrity and authenticity on the blockchain.In essence, Aleo creates a secure haven for developers to innovate without compromise. By enabling encrypted records accessible only by their rightful owners, Aleo liberates developers from the shackles of data vulnerability, opening doors to a new era of privacy-enhanced blockchain development.How DokoJS fill the gap?While the Aleo blockchain offers unparalleled privacy and security for developers, entering its ecosystem hasn’t always been a walk in the park. One of the challenges developers face is the intricacy of writing and testing programs on Aleo, often requiring separate projects and manual management of dependencies. This friction can deter even the most enthusiastic developers from exploring the full potential of the Aleo blockchain.DokoJS swoops in to streamline the development process, providing developers with a cohesive environment to write, test, and manage multiple Aleo programs within a single project. No more juggling between different projects or wrestling with dependency management; DokoJS abstracts away these complexities, allowing developers to focus on what they do best: building innovative solutions on the Aleo blockchain.One of the standout features of DokoJS is developers can write scripts for deployment and testing with TypeScript. This not only lowers the barrier to entry for developers but also accelerates the adoption of Aleo by tapping into the vast pool of TypeScript developers worldwide.Key FeaturesOffers a command-line interface (CLI) for project managementAutomatic Dependency management for the multiple Aleo programs.Simplifies the process of interacting with Aleo contracts by generating function call code for program transition functions.Facilitates deployment scripts and commands for deploying Aleo contracts to the network.Offers easy testing setup.Offers a range of utilities for interacting with Aleo programs and their outputs.Working with DOKOJSLet’s start with the setup of dokoJS cli which provides a range of commands from initializing projects to adding programs, deployment, and more.Note: Before installing the DokoJS CLI, it’s essential to fulfill certain dependencies, namely Rust, SnarkOS, and the Leo language. You can access the installation guides for these dependencies in the DokoJS README linked here.Install dokoJS globally using npm:npm install -g @doko-js/cli@latestInitialize a New Projectdokojs init &amp;lt;PROJECT_NAME&amp;gt;Let’s initialize a project called ‘token’. This will internally install the dependencies for the project.After project initialization, DokoJS generates the following directory structure:├── contract│   └── base-contract.ts├── node_modules/├── programs│   ├── sample_program.leo│   └── token.leo├── scripts│   └── deploy.ts├── test│   ├── sample_program.test.ts│   └── token.test.ts├── .env├── .gitignore├── aleo-config.js├── babel.config.json├── jest.config.json├── package-lock.json├── package.json├── README.md├── node_modules/└── tsconfig.jsonAfter initializing the project, it will create the following directories:- contract: This directory contains a single file — `base-contract.ts`, a class containing common method and config for aleo programs in js.- programs: This directory is made to hold all the leo programs. [`token.leo`](https://github.com/AleoHQ/workshop/blob/master/token/src/main.leo) file is created during the initialization along with `sample_program.leo`- scripts: This directory is made to hold specific tasks and user scripts.- test: This directory is made to hold all the tests.- `aleo-config.js` -&amp;gt; This is a configuration file consisting of a private key, a method to execute on chain or dry run, and different networks.Let’s explore `aleo-config.js`.import dotenv from &amp;#39;dotenv&amp;#39;;dotenv.config();export default {  accounts: [process.env.ALEO_PRIVATE_KEY],  mode: &amp;#39;execute&amp;#39;,  mainnet: {},  networks: {    testnet3: {      endpoint: &amp;#39;http://localhost:3030&amp;#39;,      accounts: [process.env.ALEO_PRIVATE_KEY_TESTNET3,                  process.env.ALEO_DEVNET_PRIVATE_KEY2]      priorityFee: 0.01    },    mainnet: {      endpoint: &amp;#39;https://api.explorer.aleo.org/v1&amp;#39;,      accounts: [process.env.ALEO_PRIVATE_KEY_MAINNET],      priorityFee: 0.001    }  },  defaultNetwork: &amp;#39;testnet3&amp;#39;};We have two modes of execution supported:1. `execute`: In this mode, proof is generated and broadcasted on chain. Internally, it calls `snarkos developer execute` command.2. `evaluate`: In this mode, no proof is generated and broadcasted on chain. Internally, it calls `leo run` command.aleo-config acts as a default configuation for the entire project. It can be overwritten on per program basis as well.Note: If you are using local devnet for testnet3 setting, then you need to have the devnet running in background which is done with devnet.sh script file in the snarkos directory that you installed when completing the dependency install.Adding / Modifying a ProgramTo add a new program create a new file inside the programs/ directory. To modify the existing file, simply modify the existing file or run command.dokojs add &amp;lt;PROGRAM_NAME&amp;gt;CompilationTo compile the project, run:dokojs compileThis will create the artifacts folder. The artifacts folder has two main directories:leo — This directory contains the Leo packages. For each program in programs directory, a corresponding Leo package is created. The leo code form programs is copied to the src/main.leo file and is then compiled. If the compilation for all the programs is successful, the generated .aleo files are parsed to generate Leo and JS types which are inside the js directory.js — This directory contains the both Leo types, JS types, js2leo (Leo type to Js type conversion), leo2js (JS type to Leo type conversion). For each of the programs, it also creates .ts file that contains all the transitions and mappings of the program.├── js│   ├── js2leo│   │   ├── index.ts│   │   └── token.ts│   ├── leo2js│   │   ├── index.ts│   │   └── token.ts│   └── types│       ├── index.ts│       └── token.ts│   ├── sample_program.ts│   ├── token.ts└── leo    ├── sample_program    │   ├── README.md    │   ├── build    │   ├── inputs    │   ├── leo.lock    │   ├── outputs    │   ├── program.json    │   └── src    └── token        ├── README.md        ├── build        ├── inputs        ├── leo.lock        ├── outputs        ├── program.json        └── srcSince, sample_program did not have any types, there is no need for js2leo, leo2js or type file.Running TestsAfter the successful compilation, tests can be written based on the files generated after compilation.A sample test file is created for both the sample_program and token program. Run all the tests with:npm run testIf you want to test a particular test file:npm run test -- sample_program.test.tsPro Tip: You don’t need to enter the full test file name. You can use part of the name of the file and the tests that matches the entered name will run. Example: npm run test -- sampleFor more, just explore the dokoJS cli, invoked by dokojs .ConclusionDokoJS represents a significant leap forward in Aleo development, providing developers with the tools they need to innovate, iterate, and deploy privacy-focused decentralized applications on the Aleo blockchain. As the Aleo ecosystem continues to evolve, DokoJS stands ready to support developers in their journey to explore the promise and potential of this groundbreaking technology.Furthermore, DokoJS is an open-source project, that invites collaboration and contributions from developers worldwide. If you’re passionate about shaping the future of DokoJS development, we welcome you to join our community on the Telegram channel, where you can collaborate with like-minded individuals and contribute to the growth of DokoJS.Telegram Link: DOKOJS DevelopersGithub: https://github.com/venture23-aleo/doko-jsDOKOJS: ALEO Blockchain Development Framework was originally published in Venture23 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
</feed>
