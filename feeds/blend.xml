<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <title type="text">Stories by Script3 on Medium</title>
  <link rel="alternate" type="text/html" href="https://medium.com/@script3?source=rss-445b9df7b1f9------2"/>
  <link rel="self" type="application/atom+xml" href="http://10.0.0.124:3044/?action=display&amp;bridge=FeedFinderBridge&amp;url=https%3A%2F%2Fscript3.medium.com%2F&amp;strip=on&amp;_cache_timeout=3600&amp;format=Atom"/>
  <icon>https://cdn-images-1.medium.com/fit/c/150/150/1*0CU9Ey5h1qC-KkKSxr3VMg.png</icon>
  <logo>https://cdn-images-1.medium.com/fit/c/150/150/1*0CU9Ey5h1qC-KkKSxr3VMg.png</logo>
  <id>http://10.0.0.124:3044/?action=display&amp;bridge=FeedFinderBridge&amp;url=https%3A%2F%2Fscript3.medium.com%2F&amp;strip=on&amp;_cache_timeout=3600&amp;format=Atom</id>
  <updated>2025-04-11T22:01:14+00:00</updated>
  <author>
    <name>RSS-Bridge</name>
  </author>
  <entry>
    <title type="html">Blend V2: What to Expect</title>
    <published>2025-03-11T20:28:01+00:00</published>
    <updated>2025-03-11T20:28:01+00:00</updated>
    <id>https://script3.medium.com/blend-v2-what-to-expect-4edcb08760c2?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://script3.medium.com/blend-v2-what-to-expect-4edcb08760c2?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Whats up Blend Babies!Blend V2 audits wrap up in a week, so let’s go over what to expect once the protocol is officially complete.Migration Process:The Blend V2 migration is like a fork. The new Blend V2 protocol and its pools will be deployed and lenders, borrowers, and backstoppers can immediately start using Blend V2. The BLND token will not change, and Blend V1 will remain operational so there’s no rush. An emissions fork (or backstop swap) can be performed that moves BLND emissions from Blend V1 to Blend V2. This can be initiated once Blend V2 has more backstop deposits than Blend V1, then after a 31 day timelock, emissions will be sent to Blend V2 instead of Blend V1. To make this process smoother, Blend V2 will track up to 10m BLND in emissions it would have received during the migration period. If the emissions fork is successful, these emissions can then be claimed.“Ok that all makes sense, but what does it mean for me?”Lender and Borrower MigrationLenders and borrowers can move to Blend V2 as soon as they deem it suitable. This will likely be when the pools and assets they use have been added to Blend V2. We should note — the level of insurance in Blend V1 will steadily decrease as backstop depositors migrate to the new protocol. In addition, once V1 pools start to drop below the minimum backstop requirement borrowing and depositing may be disabled in them USERS ABILITY TO REPAY LOANS OR WITHDRAW FUNDS WILL NOT BE AFFECTED. In addition, lenders and borrowers may see interest rate volatility as other lenders and borrowers migrate to V2.Backstop MigrationBackstop depositors can queue their funds for withdrawal from V1 and deposit them in V2 as soon as they wish (likely whenever a pool they want to backstop appears in V2). Backstop depositors should be aware that once the majority of them migrate, and the emissions fork completes they will stop receiving emissions in V1, so they may want to migrate before that happens.Wallets and IntegratorsAs we mentioned earlier, V1 will remain operational. So there’s no reason to rush your migration. I would suggest a migration strategy of adding a “Migrate to Blend V2 and receive x interest” call to action that allows your users to withdraw from Blend V1 and deposit into Blend V2 (2 separate transactions). This way the users get to decide when to migrate. From a technical perspective the integration won’t have changed at all — the interface to process user deposits and withdrawals is the same, you’ll just need to update the contract address.With the launch of Blend V2 wallets will now also finally have access to the Blend Fee Vault which allows integrators to earn a portion of interest from their user’s deposits in an entirely noncustodial fashion.See the github or reach out to Script3 for more information:https://github.com/script3/fee-vaultgm@script3.io“How will I be able to Access Blend V2?”Both Blend V1 and V2 will be available via the Blend webapp. You can see what the post-v2 website will look like right now by visiting https://testnet.blend.capital/“What Actually Changed in Blend V2?”Very little! Let’s go over it:Flash Loan Support:Blend V2 adds flash loans! Flash loan consumers like arbitrage bots and DeFi protocols can now flash borrow from Blend by calling the flashloan() function. https://github.com/blend-capital/blend-contracts-v2/blob/main/pool/src/contract.rs#L152More Pool Parameters:Pool creators can now add collateral caps, and have the ability to safely disable assets.Easier Integrations:Smart Contracts interacting with blend can now utilize the new submit_with_allowance()function to help them manage user positions and also have better access to internal data thanks to the get_reserve()functionMore assets in pools:Pool creators can now create pools with up to 50 assets!Better Liquidations:Liquidators now have more flexibility when creating liquidations in the pool, allowing them to create more competitive and safer liquidation auctions.Optimizations:Various improvements have been made to the protocol to help reduce fees and increase usability, like allowing leveraged positions to be unwound in a single transaction!“Where Can I Learn More?”We’ll release V2 docs at some point, but for now you can check out the V2 Github here: https://github.com/blend-capital/blend-contracts-v2 or join the discord here: https://discord.gg/8EY6HZ97</content>
  </entry>
  <entry>
    <title type="html">Testnet Time: Will It Blend?</title>
    <published>2024-01-18T19:35:30+00:00</published>
    <updated>2024-01-18T19:35:30+00:00</updated>
    <id>https://script3.medium.com/testnet-time-will-it-blend-8872245746fe?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://script3.medium.com/testnet-time-will-it-blend-8872245746fe?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Taste Testing Blend 😋Hi 😎Blend has been released to Testnet️! Go do some lending, some borrowing, some backstopping — you’ll be participating in the development of a global financial building block!Link: testnet.blend.capitalDocs: https://docs.blend.capital/Code: https://github.com/blend-capital/blend-contractsHow to use the testnet:1. Make sure you have a Stellar browser wallet installed: - Freighter: https://www.freighter.app/- xBull: https://xbull.app/(All steps will be shown using Freighter.)2. Switch your wallet to the Stellar Testnet by clicking the selector in the upper right corner of the extension and selecting ‘Test Net’.3. Go to https://testnet.blend.capital/4. Connect your wallet by clicking on the button or banner shown below and signing the prompted wallet message.5. If your testnet account is unfunded, the banner shown below will appear.Click on your browser wallet extension to fund your account on the Stellar test network. The message shown below will be shown. Click the ‘Fund with Friendbot’ button.6. Once your testnet account is funded, another banner will appear (shown below). Click this and sign the prompted wallet message. This will provide your account with Blend testnet assets.The testnet assets you will receive are:- 10,000 BLND- 1,000 USDC- 0.5 wETH- 0.1 wBTC7. You’re ready to start Blending! 🎉Help! I’m Still Confused 😭Hop in the Blend discord, and we’ll try and help!https://discord.gg/5fhgCGEnUtWhy should I care about this?Well we’re proud of it — but regardless of our feelings, there’re a variety of factors that should excite anyone!On-chain permissionless lending on Stellar!This is a very big deal — now the Stellar ecosystem can offer things such as:Blend allows wallets to offer noncustodial interest and credit features, elevating their product offering to that of a full-service financial app!Trading interfaces can integrate with Blend to offer their users leverage!Remittance companies (and other organizations that utilize Stellar as financial rails but rely on real-world lending) can move their borrowing and lending on-chain to improve transparency and capital efficiency!DeFi protocols that utilize borrowing and lending as one of their components (i.e. CDP protocols) can build on top of Blend to leverage its security and liquidity, while focusing on the innovative, unique aspects of their app!So What’s the Secret Recipe?Blend is the result of a grueling design process that would take too long to explain here (we’re saving it for future articles). Instead we’ll give a brief taster of its key ingredients:1. Maximum Flexibility: Blend was built as a primitive hyperstructure that allows anyone to create new pools with whatever assets and parameters they require. You can build literally ANY product or protocol that requires lending on top of Blend while still inheriting its security and capital efficiency.2. Ruthless Capital Efficiency: Blend utilizes a reactive interest rate model which maximizes capital efficiency by ensuring capital flows where it’s most useful. Additionally, assets lent to one pool can support a variety of loan-to-value ratios depending on their paired liability/collateral asset’s risk profile, significantly reducing liquidity fragmentation.3. Painless Liquidations: Blend’s liquidations only liquidate the minimum amount required to return the account to a healthy position.4. Oracle Risk Mitigation: Blend only relies on oracles to trigger liquidations rather than allowing them to value collateral assets. This protects users from being unfairly liquidated due to oracle failures. Additionally, Blend’s utilization caps, combined with its reactive interest rates, minimize risk of overborrowing by minimizing the amount of idle capital available for borrowing during an oracle failure.5. Bad Debt Protection: Each Blend pool has a built-in backstop module which insures pools against bad debt. This efficient and transparent insurance mechanism protects lender funds in the most extreme scenarios.6. Insurance Requirements: Blend requires pools reach a minimum backstop module deposit threshold before they can be turned on. This prevents bad actors from easily creating unsafe pools, as they would also have to convince backstop users to insure said unsafe pool.Ok I’m a user and I’m pumped — now what?Go check out the app! Suggest features! Participate in curating the leading lending and borrowing experience on Stellar!Note: There may (will) be some bugs at this time, and new features will be added.Ok I’m a project and I’m pumped — now what?Go check out the app! Dig through the code! Demand features!Interested in integrating or building on Blend? Reach out to us! Additionally, a portion of the initial BLND distribution is going to Stellar ecosystem organizations, so let us know if you’re interested in getting added to that list!Discord: https://discord.gg/5fhgCGEnUt</content>
  </entry>
  <entry>
    <title type="html">Introducing Blend</title>
    <published>2023-04-03T18:00:29+00:00</published>
    <updated>2023-04-03T18:00:29+00:00</updated>
    <id>https://medium.com/script3/introducing-blend-95aaf66bdf41?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/introducing-blend-95aaf66bdf41?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">A Liquidity Protocol Primitive for StellarStellar is getting supercharged with Soroban — the new smart contract platform being added to the network. Access to smart contracts will completely change how assets get used on Stellar. Blend plays a key role in this evolution, providing Stellar-native lending and borrowing capabilities for asset issuers, DeFi protocols, DAOs, and financial institutions.Blend is a liquidity protocol primitive. It’s the foundation on which safe, efficient lending pools are created by anyone. An entity can create a lending pool to enable users to earn interest and borrow assets, all while being insured by a unique backstop module. Creators are given plenty of controls — from supported assets, collateral requirements, custom oracles, and immutability — such that almost no use case is left out.There are no requirements to deploy a Blend lending pool, anyone can utilize this tool to bring additional functionality to their Stellar based assets! However, there are requirements to enable interaction with pools, as permissionless deployment can lead to spam and attempted scams with fake pools. To combat this, lending pools need to have a minimum amount of funds in the backstop module before anyone can use them.After creation, Blend lending pools adapt to market conditions to ensure all capital is used efficiently. If assets aren’t being utilized effectively, interest rates will lower to entice more users to begin borrowing, and vice versa — no DAO proposal required!All of this occurs while suppliers to a Blend lending pool remain protected by the backstop module. In the event of bad debt, stolen funds, or other loss, backstop module funds are used to replace assets for suppliers. Further, Blend’s liquidation engine helps ensure that damage is limited in the event an oracle is exploited.To get a deep dive into the nuts and bolts of the Blend Protocol — please check out the whitepaper here: https://github.com/blend-capital/blend-whitepaperStellar Ecosystem BLENDEDThe introduction of Blend has a variety of awesome implications for the Stellar ecosystem. Generally, it attracts on-chain capital, and improves market liquidity and efficiency.This improvement is driven by the exciting use cases Blend enables. These include:Fintech BLENDEDStellar is already a great blockchain to build financial platforms on. Wallets can utilize the existing ecosystem to provide users with cheap payments and remittances, all while users retain custody of their assets. Wallets can create Blend lending pools (or integrate existing ones) to offer their users lending and borrowing capabilities, enabling them to generate interest or get liquidity. This results in an on-chain user experience that rivals the best centralized financial service platforms.Trading BLENDEDBlend provides Stellar DEX traders with borrowing capabilities, providing them with leverage and short selling capabilities. This completes the trading experience — allowing the Stellar DEX to act as a legitimate alternative to centralized exchanges.DAOs BLENDED — a YieldBlox Case StudyThe YieldBlox DAO was created to bring lending and borrowing capability in a decentralized way to Stellar. They have decided using the Blend protocol as the backbone for their lending and borrowing features will allow them to bring a safer and more efficient product to market, while focusing on how to facilitate an Aave-like product on Stellar. Read more about their announcement here: https://medium.com/@markus_0/kicking-off-the-yieldblox-dao-9e7cfdcca03eDeFi BLENDEDMuch of DeFi is built on borrowing. CDP protocols like MakerDAO allow you to borrow their stablecoin against collateral, synthetics protocols like Synthetix allow you to enter synthetic positions by borrowing a synthetic stablecoin against their protocol token. Protocols like these could be built using Blend as a base layer to handle their accounting — improving security in a budding ecosystem.Ultimately, there’s a lot of ways to leverage Blend as a powerful addition to other products. If you’re interested in building an integration like this, hop in the discord and tell us about it!Disclaimer — TokenAt this moment, there is NO BLND TOKEN. The BLND token will ONLY exist once the protocol is live on mainnet.Things to look out for —For those of you that want additional insight into the decisions made while designing Blend, Script3 will be releasing a stream of blog posts covering everything from why there’s no DAO to what building this on Soroban was like.For those that just want a taste of liquidity protocols built with Soroban, a testnet version of the protocol will be released shortly after Soroban is released on testnet.For anyone with other questions or a desire to contribute, please join the Blend Capital discord! https://discord.gg/v2DPBwRyKBBlend Website: https://www.blend.capital/Introducing Blend was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Sprout Coma — a new horizon on the same course</title>
    <published>2022-02-28T16:38:37+00:00</published>
    <updated>2022-02-28T16:38:37+00:00</updated>
    <id>https://medium.com/script3/sprout-coma-a-new-horizon-on-the-same-course-da131915e796?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/sprout-coma-a-new-horizon-on-the-same-course-da131915e796?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Sprout Coma — a new horizon on the same courseOver the past month, the Script3 team has assessed what on-chain Stellar smart contracts mean for the YieldBlox Protocol. We’ll break down our thought process in a bit, but first, we’re going to get straight to the point. YieldBlox will not be launching on mainnet using the Stellar Turrets network. The current plan is for YieldBlox to launch next year once Stellar on-chain smart contracts are finished.This may seem like a sudden change. To get a more complete understanding of this shift in direction, we encourage you to check out Tyler’s post about why he is moving on from Stellar Turrets. His opinions roughly align with ours. There are a few core reasons why we are also moving on:Security — Stellar Turrets, by design, are less secure than an L1-based smart-contract framework. Turrets were originally designed as the best option for any smart-contract protocol that wanted to tap into the Stellar network. We worked diligently to manage all the risks that came with running contracts off-chain so Stellar could benefit from the booming DeFi ecosystem. However, with L1 smart contracts announced, the safest place for YieldBlox to live is on-chain. On-chain smart contracts are the best, most secure way for you all to interact with YieldBlox.Community — Given the new L1 smart-contract framework being a part of SDF’s 2022 Roadmap, we have found it extremely difficult to grow the Stellar Turret’s development and host community outside of a few individual contributors and small startups (of which, we are extremely grateful). The focus and future of the Stellar Network, SDF, and the Community appears to be on the new L1 smart-contract framework. With this, Stellar Turrets will not be as decentralized as we would like them to be.Feasibility — We explored multiple avenues that would allow us to still bring YieldBlox to everyone soon on Stellar Turrets and migrate to the new L1 smart-contract system when it was ready. The risks with security and the community can be mitigated, but given our team size, it would be an irresponsible task to take on. We would potentially put millions of dollars in our protocol (user money!) at significant risk.Although it’s incredibly disappointing to have to put YieldBlox on hold, we truly believe that this is the best thing for YieldBlox in the long term. On-chain smart contracts give us and the Stellar community the best chance to launch a stable, secure, and healthy version of YieldBlox.Finally, we’re incredibly grateful to everyone who has supported us. Thank you to the beta users, discord chatters, bug hunters, content creators, YBX traders, and discord mods. You all are the best community a team of DeFi builders could ask for. We’re incredibly excited to launch YieldBlox once smart contracts are ready, and to share with you what we’ll be working on in the meantime.What’s next for Script3?At the end of the day, we’re still a group of builders who love DeFi. We encourage you all to keep following us, we have exciting stuff coming down the pipeline, and we won’t forget about our original YieldBlox supporters. Further, we still have every intention of launching YieldBlox. We just have decided to wait to do it in a secure manner.This wraps up the main point of this article. If you still have questions, we’ve included an FAQ below and a detailed chronology of everything that led to this decision.FAQQ: So when is YieldBlox going to launch?A: We don’t know. Once SDF finishes on-chain smart contracts (the current projection is testnet by the end of 2022), we will be able to provide a rough estimate.Q: WTF RUG! SCAM! AHHHA: The Script3 team did not sell a single YBX token. And currently, the plan is still to launch, just with a much larger-than-expected delay.Q: What about the YBX token?A: The token isn’t going anywhere. When YieldBlox launches with on-chain smart contracts, it will use the same YBX token.Q: What about my day-0-stake?A: When YieldBlox launches with on-chain smart contracts, your day-0 stake will be escrowed for the specified lockup time.What led up to this?To be as transparent as possible, we’ve included this section that documents every event and decision that led to this delay announcement.January 21st, 2022: The YieldBlox Testnet Beta goes LiveOn January 21st, we launched the YieldBlox testnet beta. At this point, we planned on testing YieldBlox for a month on the testnet then launching on mainnet. In parallel, we planned on starting the fundraising process as we were starting to run low on money. Now that YieldBlox was out and looking excellent, we wanted to start approaching VCs and angel investors!January 25th, 2022: On-Chain Smart Contracts are AnnouncedOn January 25th, the Stellar Development Foundation announced on-chain smart contracts in their Q4 review. Like most of you, we were shocked and excited by this. It didn’t sound like they were talking about Turrets, but on-chain smart contracts had been a pipe dream for years.After spending the rest of the week asking around, we discovered that our pipe dream had become a reality! The Stellar Development Foundation was committed to bringing smart contracts to the testnet by year-end. Details were fuzzy, but it sounded like the team was thinking about the right things, at least in our opinion. Now the question was, what did this mean for Stellar Turrets and YieldBlox?We put our heads together and figured out what we believed to be the most likely outcome. In order for YieldBlox to launch as planned, we were depending on a large amount of support for the ecosystem for Stellar Turrets. Since Turrets were still in their infancy, we needed a handful of major ecosystem organizations to begin hosting high-quality Turrets for YieldBlox to launch in a stable and decentralized environment. With on-chain smart contracts coming, we couldn’t see a future where the Turret community continued to grow organically. This meant if YieldBlox was to launch as planned, the majority of the development and marketing for Turrets was going to fall on our shoulders.The next thing to consider was whether we could successfully take on that work. After reviewing our current situation, the answer was, unfortunately, no. We didn’t have the human or capital resources to develop both YieldBlox and the entire Turret ecosystem.So how could we go about procuring said capital? You’ll recall that we were planning on raising prior to the on-chain smart contract announcement. Unfortunately, after talking to a few industry contacts, we decided raising was no longer viable. With Turrets in essentially a deprecated state, we would be asking investors to take on a huge amount of technical risk. Furthermore, given that we’re a doxxed team and US-based, any public fundraising was also off the table. Therefore, our last resort for securing funding to maintain both YieldBlox and the Turrets network was the Stellar Development Foundation. We began putting together a grant proposal.January 31st, 2022: We Bring a Grant Proposal to SDFOn January 31st, we met with SDF to present our grant proposal. The gist of the proposal was that we would continue to build out the Turret network, launch YieldBlox as planned, begin building YieldBlox on their smart contracts when possible, provide feedback on building with on-chain smart contracts, and launch YieldBlox day-0 on the new smart contract ecosystem. In exchange, they would provide us with quarterly grants until we could procure funding. We felt that this would provide SDF with valuable feedback on the new on-chain smart contracts as they were developing them, and allow them to launch on-chain smart contracts with a DeFi ecosystem and community already in place. Additionally, we expected this partnership and show of faith would make it once again possible for us to raise.February 23rd, 2022: We Hear Back from SDFOn February 23rd, after a few weeks of discussion, we heard back from SDF. They did not opt to fund our grant proposal. Thus, we would not have the funding required to support the Stellar Turret network ourselves. However, they still wanted to support us as an organization and hoped that we would launch YieldBlox once the on-chain smart contracts were live. They graciously provided us with some alternative ways they could fund us in that endeavor.After all of this, the way forward was clear to us. It would be impossible to launch YieldBlox on Turrets safely. The best path forward was to rebuild the protocol and launch it using on-chain smart contracts. Overall, we’re content with this outcome. It means a longer wait before launch, but YieldBlox will be better than it would have been on Turrets when it is launched.Signing Off for NowIf you made it this far, we truly appreciate you. We are eager to share what is next and hope you all are just as excited as we are about it!Sprout Coma — a new horizon on the same course was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Leveling Up YieldBlox — Protocol Owned Debt and Other Stuff</title>
    <published>2021-11-26T19:19:21+00:00</published>
    <updated>2021-11-26T19:19:21+00:00</updated>
    <id>https://medium.com/script3/leveling-up-yieldblox-protocol-owned-debt-and-other-stuff-52f7429d06f2?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/leveling-up-yieldblox-protocol-owned-debt-and-other-stuff-52f7429d06f2?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Leveling Up YieldBlox — Protocol Owned Debt and Other StuffLast week, we came up with two novel innovations that significantly improve YieldBlox. We could not be more excited to introduce them in this article!Protocol Owned Debt — Default Protection PerfectedFirst, let’s cover protocol owned debt, a unique system that drastically reduces YieldBlox’s risk and liquidity requirements! In short, it lets YieldBlox lending pools borrow from themselves to ensure delinquent user liabilities are liquidated. Protocol liabilities are then settled over time by redirecting protocol fees typically paid to stakers. This mechanism significantly improves YieldBlox’s stability and capital efficiency in YieldBlox; let’s provide some context on why.Current State — Undesirable Liquidation Cascade RiskTwo important components of YieldBlox’s staking feature are the default protection system and borrowing against staked YBX. The default protection system ensures the protocol never becomes insolvent by guaranteeing liquidations are always profitable. Before executing a liquidation, the protocol calculates the liquidators expected profit. If expected profit margin is below the target profit margin, the protocol sells YBX from the staking rewards pool to repay a portion of the liquidation, so the amount the liquidator repays is reduced. As a result, in an economically rational environment delinquent positions will always be liquidated regardless of how under-collateralized they become. This is a common mechanism in DeFi lending protocols, both Aave and Maker employ something similar. Separately, borrowing against staked YBX allows stakers to use their staked YBX as collateral. This provides stakers with some amount of liquidity on their time locked staked YBX and increases protocol usage.Now if you think about both of these mechanisms in combination, you’ll realize their combined effect creates liquidation cascade risk for YieldBlox. Imagine the following scenario:A supported asset experiences an extreme market sell-offThis triggers a number of liquidations that require default protectionThe protocol begins selling YBX to ensure liquidations are profitableYBX’s price begins to tank causing users borrowing against their staked YBX to be liquidatedThis perpetuates into a chain-reaction causing a huge amount of liquidations and a huge YBX price decreaseWe’ve been aware of this risk and have been searching for the best way to mitigate against it. The most obvious solution is to ensure that the YBX:XLM pair is extremely liquid, so it can absorb large amounts of selling pressure. This need for liquidity is one of the reasons we are introducing the YBX:XLM LP share staking feature. However, we still felt that incentivizing liquidity was a band-aid solution which didn’t address the root of the problem…The Solution — Protocol Owned DebtWith protocol-owned debt we’ve found an almost perfect solution for liquidation cascades. Instead of the staking pool selling YBX to perform default protection, the lending pool will assume ownership of a portion of the delinquent debt and repay the debt over time by redirecting the fees which would normally be paid to stakers. If the pool has no debt, fees will be paid to stakers as normal. This eliminates the price-shock that default protection introduced, and drastically reduces systematic risk in the protocol. This protection system is so effective that it will allow YieldBlox to support higher Loan-to-Value ratios, improving the capital efficiency of the protocol.As an added benefit, protocol-owned debt improves the risk-reward relationship for YBX stakers. Previously, YBX stakers risked losing out on fees in the event of a backstop because a portion of their accrued staking fees could be sold in the event of default protection triggering. Protocol owned debt smooths that relationship. Instead of instant fee slashing, fees just won’t be accrued until protocol owned debt is repaid. Additionally, borrowing against staked YBX becomes significantly safer since the risk of default-protection-induced price shocks is removed. Finally, once YieldBlox adds support for multiple lending pools, YBX stakers’ exposure to the risk of large default-protection events incurred by a high-risk asset in a single lending pool will be significantly reduced. Previously, a high-risk asset had the potential to wipe out a large amount of the fees stakers had accrued from all lending pools, since default-protection drew from all accrued fees. Now, stakers will simply stop accruing fees from the offending pool until that pool has repaid it’s accrued debt. They will still receive fees from all other pools.While protocol owned debt is a wonderful improvement, it does come with one risk. While highly unlikely, it’s technically possible for a lending pool to incur too much debt to pay off. This could happen if a pool incurred so much debt that it’s interest rate was greater than the fees it generated. In this scenario, YieldBlox would have to create a governance proposal to bail out the delinquent pool by auctioning-off YBX.Growing Liability Tokens — Utilization Tracking PerfectedAnother significant development we made last week was moving from a utilization tracker system to an accrued interest tracker system. This gets relatively technical, but the gist of it is we made it much easier for the protocol to calculate a loan’s accrued interest by valuing liability tokens in a similar way as pool tokens. This will result in a ~30% performance improvement for high-volume users. If you’re interested in learning more, you can go check out the interest accrual section in our docs!What’s next?As we’ve said in the past, we’re deeply committed to releasing the best product possible. Given the scope of these updates, the amount of turret work that still needs to be done, and the timeline of our auditors, we’ll have to push back launch roughly a month. We appreciate your patience as we work to release YieldBlox as fast as possible. We’re simply not willing to rush things when building something as important as the first DeFi protocol on Stellar.That doesn’t mean you all have nothing to look forward to in December! We will be having a few community governance calls to plan some key details surrounding the upcoming launch. This is a decentralized project, so we want to discuss and decide all of these details with our community. All calls will take place in our Discord.Call Schedule:Initially Supported Assets — Friday, December 10th, 4pm ESTCall to discuss what assets will be supported by the protocol on launch day and what loan-to-value ratios and liquidation incentives each of them will haveYBX Issuance — Friday, December 17th, 4pm ESTCall to discuss initial YBX issuance rate and issuance allocationsWe’re hiring!Check out our job postings here if you want to join the Script3 team.Join our community!Twitter / DiscordLeveling Up YieldBlox — Protocol Owned Debt and Other Stuff was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">YieldBlox will transform Capital and Incentives in the Stellar Ecosystem</title>
    <published>2021-10-29T01:29:59+00:00</published>
    <updated>2021-10-29T01:29:59+00:00</updated>
    <id>https://medium.com/script3/yieldblox-will-transform-capital-and-incentives-in-the-stellar-ecosystem-828be5023765?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/yieldblox-will-transform-capital-and-incentives-in-the-stellar-ecosystem-828be5023765?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">It’s Sprout’s world — we’re all just living in itThe Script3 team is a huge proponent of the Stellar ecosystem and its mission; however, we still realize it has its fair share of challenges. Mainly a lack of capital efficiency and weak incentive structures. Our goals for YieldBlox include tackling these challenges. Now that we’re on the brink of launch, we decided to throw together a quick piece on why these are challenges for the ecosystem and how YieldBlox addresses them.Capital Efficiency: Activating your moneyHigh-velocity, high-efficiency money is the name of the game in crypto. You can move money across the globe in seconds and leverage it in 15 different ways to compound value creation. Combining these two driving forces has allowed crypto to become the exponentially growing money monster it is today. Stellar excels at the first of these; it’s one of the fastest blockchains out there. However, it’s lacking in the second criterion. Once money enters the Stellar ecosystem, there’s little reason for it to stay there and be productive. By far the biggest reason for this is the lack of money markets. In the programmable blockchain universe, passive participants (casual users and holders) can enter an ecosystem, deposit their assets in a money market to earn some interest, and forget about them. Active participants (traders, market makers, power users) can then collateralize their assets in the money market and borrow passive participants’ assets for trading, yield farming, etc. This relationship benefits both active and passive participants. But most importantly, it benefits the blockchain ecosystem as a whole since a large percentage of money remains active in that ecosystem, constantly creating value.Stellar currently lacks the money markets that make capital efficiency possible. When passive money enters the Stellar ecosystem, there is no reason for it to stay there. It makes more sense for it to do whatever it came there to do (make a payment, execute a trade, join an airdrop), then move back on to a centralized exchange, and from there move to an ecosystem that supports asset productivity. YieldBlox changes all of this; passive participants now have a reason to keep assets in the Stellar ecosystem, as they can simply deposit them in YieldBlox and earn interest. These assets now become available for active participants to leverage and invest, improving and growing the Stellar ecosystem. We expect this symbiotic relationship to draw significantly more capital into the Stellar ecosystem, resulting in a more liquid DEX (think about people borrowing assets to deposit them into liquidity pools) and more capital flowing into your favorite ecosystem projects (did someone say Smart NFTs?).Incentives: Cash Rules Everything Around Me (CREAM)At its core, incentives drive crypto, usually monetary ones (CREAM). In the last section, we already somewhat covered this when we mentioned how passive money has no reason to stay in the Stellar ecosystem. There’s nothing for it to do to be productive and generate revenue (CREAM). We see another example of this by looking at Stellar’s validator count vs. other chains. The Stellar Consensus Protocol(SCP), by design, does not include economic incentives like Proof of Stake(POS) does. This design is fine due to SCP’s unique trust model, but it also means there are much smaller incentives to become a Stellar validator than there are on a POS chain. Stellar doesn’t pay you for being a validator; Solana does. As a result, Stellar has ~30 validators, and Solana has thousands (CREAM). Because of the SCP, the effect on validator counts isn’t really a concern. However, if we expand this incentives rule to the rest of the Stellar ecosystem, things look problematic. Stellar is unquestionably the best blockchain for building fintech platforms on. However, why would I build a non-custodial Stellar-based fintech platform when there aren’t any monetary incentives for doing so? Revenue models for non-custodial fintech platforms are hard (CREAM). Furthermore, why would an end-user use my platform when there aren’t any protocol-level interest rate products I can offer them (CREAM)? YieldBlox is designed to handle these exact issues. Sprout is the king of CREAM.YieldBlox enabled Fintech Platform Interest Rate ProductsWith the introduction of YieldBlox, fintech platforms building on Stellar can now use it to offer their users interest rate products while staying non-custodial and trust-free. Since YieldBlox is a DeFi product, it lives at the protocol level of the Stellar Ecosystem and is incredibly easy to integrate. All an integration requires is a button that makes a few API calls, and boom, the platform’s users can now deposit assets into YieldBlox’s lending pools and earn interest.To add to this, we’re aware many platforms built on Stellar anchor their own assets. We want to support all these assets in YieldBlox. However, we’re also aware that if even one of these assets proves fraudulent, it could bring down the whole platform. As a result, we will be expanding YieldBlox to support multiple lending pools (if governance approves the feature). This feature allows the governance system to isolate riskier assets in their own markets, which will likely command better interest rates. This update will be proposed after launch, as it requires some large changes.YieldBlox enabled Fintech Platform Revenue ModelsThis section is probably the one we’re most excited about. A new YieldBlox update will allow users to delegate a percentage of their token yield to another account. This change is tiny, but it’s incredibly powerful when considering the ramifications for fintech platforms integrated with YieldBlox. The goal for fintech platforms building on Stellar is for users not even to know they’re using a blockchain. As a result, most of their users don’t know or care about YBX token yield, so the platform is free to input a high delegation percentage when creating the YieldBlox deposit request for the user. This delegation means platforms will receive a steady stream of YBX tokens from their user’s deposits. That’s revenue!Let’s take this a level deeper. Remember how we mentioned a lot of platforms anchor their own token? If you’ve read our docs or tokenomics article, you’ll also remember that YBX stakers vote weekly to decide how YBX incentives will be distributed between assets. So, what if instead of selling the YBX tokens they receive from their users, platforms instead stake the tokens and use them to vote to increase the percent of YBX incentives their anchored assets receive? This increases their revenue and creates a compounding revenue stream. Taking this a bit further, it’s easy to imagine a future where platforms integrated with YieldBlox compete to stake the most YBX so that they can secure their revenue stream. And the cherry on top is you can borrow against staked YBX, so staking YBX doesn’t reduce working capital for these platforms! Like I said earlier, Sprout is the king of CREAM.Closing thoughtsOverall, we’re incredibly excited for YieldBlox. The Stellar ecosystem is going to change forever once it’s released. We’re expecting to release at the beginning of December. There’s a lot of work to do before then. In the near term, YBX airdrops will start being distributed tomorrow at 11:59 PM UTC, so keep your eyes open if you’re trying to scoop up some tokens on the DEX!Furthermore, we’re hiring for full-time BD and Developer Roles. Come build the future of finance with us!Join our Community!Twitter / DiscordYieldBlox will transform Capital and Incentives in the Stellar Ecosystem was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">YieldBlox Beta Roundup &amp; Next Airdrop Steps</title>
    <published>2021-10-22T02:39:20+00:00</published>
    <updated>2021-10-22T02:39:20+00:00</updated>
    <id>https://medium.com/script3/yieldblox-beta-roundup-next-airdrop-steps-501357cff1dd?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/yieldblox-beta-roundup-next-airdrop-steps-501357cff1dd?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">The YieldBlox testnet beta just ended, and wow — what a ride! Our community was extremely involved throughout the beta. Altogether, they managed to farm over 472,000 YBX using a variety of strategies. The beta was also very insightful for our team: we plan to make a few changes to the smart contracts and a few bugs were fixed. Before we take a deep dive into the beta results, the end of the beta marks the end of the airdrop, so it’s time to announce a delay!YBX Airdrop Update/Day-Zero StakingAs I’m sure you know, the airdrop was supposed to go out tomorrow. Unfortunately, due to some extenuating circumstances, we’ve had to modify airdrop distribution somewhat. YBX trustlines have ballooned to over 150,000 (almost half of which appeared in the last week), we ran some checks on the accounts, and we’re 99.99% sure ~130,000 are bots. So we’ll be disqualifying those accounts from the airdrop. This leaves us with ~20,000 accounts that we think belong to real people. Additionally, our discord membership has grown to over 16,000 accounts, despite banning over 10,000 accounts for appearing to be bots. While we think YieldBlox is amazing and are really proud of what we’re building, we’re not naive enough to believe that all 20,000 trustlines or all 16,000 discord accounts belong to people who are genuinely interested in using and growing YieldBlox. As we stated in the airdrop announcement article, the goals for the airdrop are to:1. Get YBX into as many real ecosystem wallets as possible2. Teach potential future users how to use YieldBlox3. Grow the YieldBlox communityWhile the latter two of those goals have already been incredibly successful, the first goal is definitely in jeopardy. If we continue on course, it’s clear a large portion of airdropped tokens will end up in the hands of people who have no interest in YieldBlox or Stellar, which would be extremely unfortunate.With this in mind, we are making the following changes to the airdrop:Day-Zero StakingWhen considering the YieldBlox tokenomics model, the most rational action for any individual who has long-term interest in the YieldBlox protocol is staking YBX tokens as soon as the protocol goes live. Doing so grants them yield from both token issuance and protocol fees; furthermore, they gain the ability to borrow against staked funds and participate in protocol governance. It’s a growth-positive action for both the individual and the protocol. For more information on staking, tokenomics, and growth positivity, see our last article.We really couldn’t think of a good reason for users invested in the long-term success of the protocol to not stake on day zero. As a result, we’ll be offering all registered airdrop users the option to sign up for day-zero staking, which will issue their tokens directly into the staking smart contract. Users who elect for this choice will receive a 10x multiple on their airdrop entries. Note, the amount being airdropped remains the same, but users who opt into Day-Zero staking will boost their number of entries. Lastly, these YBX stakes will not be withdrawable with the early withdrawal function to prevent individuals from gaming the system (as we saw in the beta, you all are pretty crafty).Examples:If a beta airdrop recipient farmed 1,000 YBX in the beta, that 1,000 will be considered 10,000 when we calculate the final payout.A community airdrop recipient’s 1 entry will be considered 10 entries when we calculate the final payout.Below, we’ve provided a quantitative analysis of the benefit of day-zero staking to help you evaluate the decision. Assumptions made in the model are based on user decisions during the beta. (Approximately 83% of YBX generated in the beta was staked, hence the 60% assumption in the model.) The model assumes a six-month staking period. As you can see, even factoring in token dilution, upon their stake unlock date, individuals who choose day-zero staking will end up with a 9x larger share of circulating YBX than they would have had on protocol launch had they not chosen day-zero staking.To reiterate, the total YBX airdropped will remain the same, so the number of tokens distributed to individuals who choose not to do day-zero staking will be decreased. This decrease is in line with our desire to distribute the majority of airdropped tokens to individuals invested in the long-term success of YieldBlox. Finally, day-zero stakers will be able to choose the term they wish to stake for (3 months, 6 months, or 12 months). The sYBX multiples for the different periods will apply here. You can sign up for zero day staking manually by adding a trust line for one of the following assets. The YBX issuing account is the issuer for all of these assets.Issuing Account: GBUYYBXWCLT2MOSSHRFCKMEDFOVSCAXNIEW424GLN666OEXHAAWBDYMX3 month lockup day-0-stake asset code: Day0Stake36 month lockup day-0 stake asset code: Day0Stake612 month lockup day-0 stake asset code: Day0Stake12For those unfamiliar with staking lockups I recommend reading the staking section of our docsTo sign up for day-zero staking, please visit our day-0-staking landing page linked below or manually add a trustline using this guide. Please note, you’re going to need to use the correct asset code. For those that do not want to manually add a trustline, we will add a signup tool on the landing page which will go live on Monday the 25th by 11:59 PM UTC and stay active until Thursday the 28th, 11:59PM UTC.https://airdrop.script3.io/Please note — Bug Bounty payouts are not eligible for day-zero staking.Changes to Distribution PeriodsOn a separate note, we’re a bit concerned about airdropping all tokens associated with the public and community airdrops simultaneously, as it would flood the market with tokens. Therefore, we will be staggering the airdrop into six payout periods to ease it into the market.October 29th — Payout 1: 50% of Beta Airdrop (excluding Bug Bounties)November 5th — Payout 2: 50% of Beta Airdrop (excluding Bug Bounties)November 12th — Payout 3: 50% of Community AirdropNovember 19th — Payout 4: 50% of Community AirdropNovember 26th — Payout 5: 50% of Public AirdropDecember 3rd — Payout 6: 50% of Public AirdropBug Bounties will be paid out to users on a rolling basis, starting on November 5th.We’re sorry for making these changes so last-minute. But we think this will result in a much better outcome for all individuals legitimately interested in YieldBlox.Beta RoundupNow that we have airdrop news out of the way, let’s discuss the YieldBlox Beta! Quick precursor, if you didn’t have a chance to participate, we’ll be opening up the testnet version of the app to the public shortly, so make sure to check it out.The YBX HarvestThe YBX beta had an airdrop tied-in where the amount of airdropped YBX participants received was tied to the amount of YBX they earned in the Beta. So it was essentially one big farming competition that gave us a great opportunity to test our protocol and architecture.Farming Stats:Maximum farmed by one person: 4,145 YBXTop 20 farmers earned over 3,000 YBX eachThe average amount of YBX farmed was 1,085The minimum amount of YBX farmed was 0.000084The median amount of YBX farmed was 89710 users were liquidated :(Initial Beta StateInitially, all users were issued 2.4 BTC, 35 ETH, 85,500 EURT, and 100,000 USDC (testnet assets, we don’t have that kinda cash). We did not enable the use of XLM in the protocol, as it would have been possible for users to farm XLM from Friendbot and gain a much higher amount of assets than other users. Since YieldBlox regularly trades on the Stellar DEX through protocol operations, we also used a market-making bot to maintain large buy and sell walls for each protocol asset. This market-making bot tracked the price of the real-world assets represented by protocol assets to ensure realistic prices.YBX Farming StrategiesWe saw users employ a variety of strategies to farm YBX. The most basic one was lending and borrowing, as both lent and borrowed assets earn YBX token yield. On top of that, many users elected to employ circular lending. They lent all their assets, then borrowed, then lent the borrowed assets, and repeated until they reached very high leverage levels (and higher risk of liquidation). The highest leverage we saw was one user turning the roughly $500,000 we gave him into an effective $3.6 million lent!One of the more unique aspects of YieldBlox is that each lending and borrowing asset has a different YBX token yield, which is set by a governance vote each week. To simulate this effect in the beta, we made the token yields for lending Bitcoin and Ethereum and borrowing USDC and EURT higher than the yield for other actions. Therefore, the optimal farming strategy was to lend BTC/ETH depending on which market was smaller and borrow USDC/EURT, again, depending on which market was smaller. Then swap the borrowed asset for more of the lent asset and rinse and repeat. A few users figured this out and traded with our market-making bot to execute the strategy. They ended up performing extremely well.We saw one more interesting strategy used although, ethically, it was questionable. Remember how we mentioned that we didn’t support native XLM since users could get as much as they wanted from Friendbot? One user took over 15 million XLM from Friendbot and used it to create offers to buy assets supported by the protocol on the DEX. They got a couple of users with this strategy and managed to gain a few million extra EURT.Takeaways for YieldBloxWe learned quite a few things from the beta and will be making modifications to the YieldBlox protocol to improve performance and UX.1. Removing 2-step deposits:Previously, to lend assets, users had to first create a claimable balance in one transaction, then input the claimable balance id into the smart contract to deposit into the protocol. This was to prevent a small exploit where the time gap between transaction creation and submission made it technically possible to skim protocol fees. We quickly realized that these non-atomic deposits were a huge UX issue. Users would submit the claimable balance transaction. Then, if the deposit transaction failed for any reason, the funds would appear lost! While users didn’t actually lose funds since they could simply reclaim the claimable balance, it was a large UX issue, as many users were not familiar with how to do so. We’ve decided to remove 2-step deposits and institute a small withdrawal fee instead to prevent the previously mentioned vulnerability.2. Changing sYBX calculations:Previously, sYBX value calculations (how we determined how much YBX an sYBX is worth) awarded retroactive fees to stakers since we paid out a flat amount of sYBX based on the staking multiple. Technically, this was economically sound because of the staking lockups, but it’s just as un-intuitive and confusing as it sounds. We’ll be changing the calculations so that sYBX is valued and issued more like a pool token.3. Adding a collateral toggle to staked YBXMany users brought up that they would like to choose whether their staked YBX is used as collateral for their borrow positions. We think this is a great idea, and increases the flexibility and usability of staked YBX.4. Allowing users to specify which type of loan they would like to repay (choosing between fixed or floating rate loans)Originally, when a user decided to repay a loan, if they had both a fixed and floating-rate loan for that asset, the smart contract would proportionally divide the repayment between the two loans. This was extremely confusing and didn’t mesh with the UI. As a result, we now allow users to specify which type of loan they’d like to repay.5. Storing info in claimable balance claimants gets pretty gnarlyWe track liabilities in claimable balances on chain, and use a claimant predicate to also track the loan’s accrued interest. This is done as a UNIX timestamp, which is represented in the predicate as a ISO 8601 timestamp. To our surprise, Horizon and JavaScript actually use different ISO 8601 representations, since this format isn’t consistent for times past the year 9999. We got around this by adding a custom ISO decoder to our protocol after realizing it was an issue, and hardened our protocol against any unexpected results. Kudos to the beta testers for finding this one!Takeaways for TurretsAs the YieldBlox beta was the first instance of a large-scale DeFi protocol using Stellar Turrets, we learned a lot about building DeFi with turrets — the main one:Horizon is not optimized for Turret workflowsOur protocol has to make a lot of API calls to use Horizon safely. This high traffic resulted in some of our contract runtimes taking upwards of 30 seconds. The takeaway is that we need to build a custom Horizon instance for turrets to cut down on the API calls we have to make.Beyond this, we were thoroughly impressed with the usability and performance of Turrets. Debugging issues in the protocol felt natural, and the overall volume the Turrets managed was impressive. Further, the cost of hosting all three Turrets was minimal. We processed ~48k contract executions across three Turrets, and only incurred ~$15.35 in hosting fees. This is approximately $0.0001 of fees accrued per Turret per contract execution (and our contracts were slow)!What’s next for YieldBlox?Now that the official Beta is over, we’re going to be heads-down working on getting the full protocol audited and released, probably by the end of November, as there’s a lot of work to do. We’re also going to be finishing those technical docs we’ve been promising for so long, and hopefully getting an API and SDK together. Additionally, we’re hiring for business development, marketing, and engineering roles, so please reach out if you’re interested in building DeFi on Stellar. Thank you all for accompanying us on this journey. We can’t wait to see what’s next!Don’t Forget about the Staking Page!https://airdrop.script3.io/Join our community!@script3official / DiscordYieldBlox Beta Roundup &amp;amp; Next Airdrop Steps was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">YBX Tokenomics Deep Dive (+10)</title>
    <published>2021-09-20T16:14:05+00:00</published>
    <updated>2021-09-20T16:14:05+00:00</updated>
    <id>https://medium.com/script3/ybx-tokenomics-deep-dive-10-d0e294fe961c?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/ybx-tokenomics-deep-dive-10-d0e294fe961c?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Platform tokens are a key innovation of the DeFi ecosystem and have powered much of its growth. The flexibility of their tokenomics models has enabled protocols to use platform tokens for a huge number of purposes, such as creating liquidity (Curve), incentivizing usage (Sushi), providing insurance (Maker), and of course, decentralized protocol governance. YBX is YieldBlox’s platform token. Its tokenomics model enables it to act as tokenized growth and become the first productive asset on Stellar! It bootstraps the growth of YieldBlox and the greater Stellar ecosystem, all while accruing value from their development.For those who are unfamiliar, YieldBlox is a decentralized money market protocol built on Stellar. It expands Stellar’s functionality as a decentralized financial network by adding trust-free lending, borrowing, and more at a base-network level.Tokenomics Overview — Growth PositivityYBX’s tokenomics model accelerates YieldBlox’s development by incentivizing holders to maximize their growth positivity (+x🌱). Growth positivity is increased through growth-positive actions — actions that benefit both the protocol and the holder, such as staking. YBX rewards are paid to lenders and borrowers to improve protocol liquidity and usage. In addition, YBX stakers receive a portion of protocol fees for staking as staking improves YBX market dynamics and expands governance participation, among other benefits.Growth Positive CriteriaFor a protocol action to be considered growth-positive, it must benefit the user while achieving either Increased Protocol Usage, Improved YBX Market Dynamics, Improved Lending/Borrowing Efficiency, or Increased Governance Engagement.YBX’s tokenomics model includes five growth positive utilities that users can use to maximize their growth positivity.Utility 1: YBX Lending and Borrowing Incentives — holding YBX +1🌱(achieves Increased Protocol Usage and Increased Governance Engagement)YBX’s most basic utility is incentivizing lending and borrowing. Any user who lends and collateralizes or borrows assets on YieldBlox earns YBX rewards. The YBX governance system sets incentive allocations. This mechanism kickstarts protocol usage and encourages efficient lending and borrowing (if there is not much lending of an asset, its per-lender YBX yield will be higher, incentivizing more users to lend it).Utility 2: YBX Staking — Basic Staking +1🌱(achieves Improved YBX Market Dynamics, enables Improved Lending/Borrowing Efficiency and Increased Governance Engagement)Staking is the core utility of YBX. YBX holders can stake YBX to receive sYBX (a token that denotes their staking contribution). sYBX comes with a variety of benefits, each of which benefits both the protocol and the staker. When staking, YBX holders lock up their YBX for a period of time between 3 months and 1 year. The longer the lockup period, the more sYBX the staker receives. At the end of the staking period, the user can withdraw their staked YBX and redeem their sYBX for a portion of the fees the protocol earned over the staking period. Protocol fees are paid out to stakers in YBX, which the protocol purchases on the Stellar DEX using a portion of borrower interest payments.Fee Redistribution and Backstop MechanismStaking is a growth-positive action because it reduces YBX sell-pressure since it temporarily removes some YBX from circulation. This improves the YBX backstop mechanism’s effectiveness, as it functions better with low YBX sell-pressure. Thus, staking is beneficial for the protocol, as it lowers counterparty risk, and beneficial for the holder as they receive a portion of protocol fees for staking.Utility 3: YBX Staking — Governance +1🌱(achieves Improved Lending/Borrowing Efficiency and Increased Governance Engagement)sYBX gained from staking YBX can be used to vote on governance proposals that modify the YieldBlox protocol. These can be proposals to add features, update interest rates, and much more. The governance model is the only way YieldBlox can develop over time. Therefore, governance engagement is crucial for the protocol’s long-term success.The most common governance proposal users will encounter is the Incentive Allocation proposal. This proposal is voted on weekly and allocates how the protocol distributes YBX incentives to lenders and borrowers. Users use their sYBX to vote for asset lending or borrowing they want YBX distributed to (often the ones they are lending or borrowing). The protocol divides the daily YBX incentive payout based on the vote distribution.Incentive allocation proposals are especially relevant for institutions. For example, A fintech platform building on Stellar and using YieldBlox as a lending and borrowing solution can stake YBX and use their sYBX to vote for assets their users are lending to offer their users a high-yield interest product.Utility 4: YBX Staking — Borrowing +1🌱(achieves Increased Protocol Usage)Staked YBX acts as collateral in the YieldBlox protocol, which means users can borrow against it like they would against any other collateral. This allows stakers to stake their YBX with a long lockup period while still retaining some liquidity. They can always borrow against their staked YBX if they need immediate liquidity. At the same time, it increases protocol usage, making it a beneficial action for both stakers and the protocol and, therefore, a growth-positive action. Borrowing against staked assets is particularly useful for institutions using staked YBX to allocate incentives to certain assets. They can borrow to ease working capital requirements while their YBX is staked.Utility 5: YBX Staking — AMM Staking +1🌱)(achieves Improved YBX Market Dynamics and enables objectives Improved Lending/Borrowing Efficiency and Increased Governance Engagement)Once AMM’s are released on the Stellar network, YBX users will have the option of staking YBX:XLM shares. This will function the same as staking YBX. By staking AMM shares, users will receive trading fees from the AMM and YieldBlox protocol fees received from staking, allowing users to double up on yield. YieldBlox makes this strategy especially potent because it trades YBX on the DEX through normal protocol operations (repurchasing YBX to distribute fees to stakers, selling YBX to provide backstop protection), so the AMM will fill a portion of those trades, meaning AMM share stakers will receive fees from the trade. This also makes AMM staking beneficial to the protocol as AMM stakers provide the protocol with liquidity to execute its trades, so AMM staking is a very growth-positive action.Optimal YBX Strategy +10 🌱As we have laid out, there are five main growth-positive actions YBX holders can take. The YieldBlox protocol allows holders to perform all growth positive actions at once to maximize value creation for both them and the protocol.The five actions a user can perform with YBX (simplified):· Sell (-)· Earn and Hold (+)· Stake (++)· Stake + Vote (+++)· Stake + Vote + Borrow (++++)· Stake + Vote + Borrow + AMM (+++++)In the above list, anything from “Earn and Hold” and below is seen as a positive outcome according to our previously outlined growth positive criteria (increasing in benefit as one goes down the list), and “Sell” is a negative outcome. Each user wants the most positive outcome for them and the protocol.The benefit of users’ actions on the protocol and themselves can be illustrated with game theory. Let’s say there are two users who both have YBX. Their action strategies can be seen here:2 Rational Actor Strategies:The following strategies can be achieved when both parties act in growth-positive ways.+2🌱 strategyIt is seen as a positive outcome if both users claim or buy YBX and do nothing (hold it) (1,1). The protocol still functions as it is supposed to, and users still get their YBX for lending or borrowing. Therefore, the protocol would see the base positive outcome of (1,1) (1 +1 = 2).+4🌱 strategyIf both users stake their claimed YBX, a more positive outcome (over just holding YBX) occurs (2,2). This has the same benefits of holding, but stakers gain more benefits from fee distributions, and YBX selling pressure is reduced. These actions result in the second positive outcome of (2,2) (2 + 2 = 4).+6🌱 strategyIf both users stake their claimed YBX and vote on YieldBlox governance proposals, the third positive outcome occurs (3,3). Both users still see the rewards of staking YBX for sYBX, but the protocol is now guided by their decisions, allowing them to increase their control and allocate YBX incentives where they see fit. This results in a fairly positive outcome for the users, (3,3) (3 +3 = 6).+10🌱 strategyNow let’s say both users stake AMM shares, vote, and borrow against their staked AMM shares. This is the maximum positive outcome for all parties (5,5). Not only do the users gain their share of protocol revenue, but they also get to claim trading fees from the AMM shares and liquidity from borrowing. This is also hugely beneficial for the protocol, as it provides maximum liquidity for the staking and backstop functions while increasing protocol usage. The most positive outcome occurs if both users use this strategy, (5,5) (5 + 5 = 10).Irrational actor strategy outcomesIt should be clear by now that YBX strategies are a cooperation game. The better the ecosystem cooperates to act rationality, the better the outcome for the protocol and users. However, it’s impossible to guarantee that all actors will be rational, so we’ll briefly cover outcomes of 2-actor strategies where one or more actors is irrational.We’ll cover a single irrational actor outcome first. Say one user sells, and the other performs all five growth-positive actions. In this scenario, a slightly negative occurs (5,-1) because the rational user’s actions offset the downside of the irrational user’s action. Additionally, due to the mechanics of staking, the rational user benefits here as they receive a higher staking APR since the other user didn’t stake and dilute yields. So overall, the damage to the protocol is negligible, and the rational user still benefits despite the lack of cooperation.To round out our discussion of YBX strategies, let’s cover a purely irrational strategy outcome. When both users act irrationally by selling YBX, the worst outcome occurs (-5,-5). This is detrimental to the protocol and users. The protocol’s staking and backstop mechanisms do not function as well, and users will not be able to claim the benefits of staking YBX, vote on governance proposals, or receive AMM trading fees. If this outcome occurs, the total benefit score is -10 as the growth impact of YBX is reduced.YBX Growth Cycle 🌱♻️Now that we’ve outlined the optimal YBX growth strategy for users to take, let’s take a look at how YBX’s tokenized growth functionality interacts with the greater Stellar ecosystem. YBX, when functioning optimally, will create efficient lending and borrowing opportunities on YieldBlox, increasing ecosystem capital usefulness. This will, in turn, grow the Stellar ecosystem by bringing in new capital, which will grow the YieldBlox protocol as a portion of such capital will funnel into YieldBlox. To round out the cycle, YieldBlox’s growth increases YBX’s growth impact allowing YBX to create more efficient lending and borrowing opportunities which restarts the cycle.To provide a concrete example, imagine that there is a fintech platform building on Stellar that uses YieldBlox to offer its users an interest-generating product. The following cycle might play out:1. The fintech platform and other YBX stakers use their sYBX to vote to allocate YBX incentives to the assets the fintech platform users are lending. This increases the interest rates the fintech platform can offer users.2. The increased interest rates attract more users growing the platform.3. The new users deposit capital into the fintech platform, growing the Stellar ecosystem.4. A portion of that capital is deposited in YieldBlox, increasing liquidity and attracting more borrowers.5. Increased borrowing increases the interest fees generated by the protocol, which, in turn, increases the amount of YBX purchased for fee redistributions by the protocol, resulting in increased staking yields.6. The increase in YBX purchases and staking yields drive up the value of YBX, which increases the value of the YBX incentives YBX stakers can allocate.7. (cycle restarts) YBX stakers allocate incentives to create more lending or borrowing opportunities; this restarts the cycle.Overall, YBX tokenomics enable YBX to serve as tokenized growth and ensure the expansion of both YieldBlox and the greater Stellar ecosystem. At Script3, we’re very excited about this tokenomics model and what it offers the ecosystem. We can’t wait to build the future of DeFi with you all!+10🌱Other News:Sam Conner Live Show:This Wednesday, September 22nd, at 3:30 EST, our CEO Markus will be chatting with Sam Conner about the YieldBlox protocol and the YBX token! Make sure to tune in and tweet any questions at us or Sam Conner!@Script3official / @samconneroneAirdrop Update:Due to the insane amount of interest in the YBX airdrops, we’ve tweaked the rules on both the community portion of our airdrop and the beta testing. Don’t worry, all legitimate community members should still be able to qualify! These measures were just to combat bots and other airdrop farmers not actually interested in the YieldBlox protocol. Read more here!Join our community!Twitter / DiscordYBX Tokenomics Deep Dive (+10) was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Everything You Need to Know About the YBX Airdrop</title>
    <published>2021-09-09T14:43:06+00:00</published>
    <updated>2021-09-09T14:43:06+00:00</updated>
    <id>https://medium.com/script3/everything-you-need-to-know-about-the-ybx-airdrop-89b4f04519d0?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/script3/everything-you-need-to-know-about-the-ybx-airdrop-89b4f04519d0?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Details on the airdrop of YBX, YieldBlox’s platform token!Update #1 (9/20/21)We’ve received an incredible amount of interest in the YBX airdrop which is amazing! However, due to this interest we’ve had to change the rules slightly to ensure the airdrop is fair for our community and manageable for us.Change to the community airdrop:If you’re in our Discord or Keybase channel you’ll already be aware of this change but we now require all community members to have been in the channel for 7 days before they can register their Stellar address for the airdrop.Change to the beta testing airdrop:We’re updating the rules to our beta testing airdrop slightly. We’re capping the number of beta participants at 1,000. The other rules about Stellar account age still apply. To apply to be part of the beta, please fill out this Google Forms!What is YBX again?YBX is the YieldBlox Protocol’s platform token. YBX holders can stake their YBX for sYBX which provides them with various benefits such as a portion of protocol revenue, the ability to allocate YBX lending and borrowing incentives, and control over the protocol. These utilities accelerate the growth of YieldBlox and the Stellar ecosystem as a whole — YBX is tokenized growth! YBX stakers directly benefit from and control the future of YBX and DeFi on Stellar! More info on YBX can be found in our docs.YBX token distributionBefore we get into the airdrop, let’s refresh on YBX’s distribution. The total supply of YBX tokens is capped at 1.5 billion. To provide a sense of scale, the total supply of XLM is 50 billion. Simply, we’re not issuing that many YBX tokens. Of these 1.5 billion, 810 million will be distributed over 10 years to protocol users, 375 million will be allocated to the YieldBlox DAO treasury, 150 million will be allocated to a partnership treasury, 35 million will be allocated to a bug bounty program, 10 million will be allocated to the airdrop, and the remainder will be distributed to the initial team and investors.You can find more info on the distribution here.The YBX AirdropWe’re designing the YBX airdrop with three goals in mind:1. Get YBX into as many real* ecosystem wallets as possible2. Teach potential future users how to use YieldBlox3. Grow the YieldBlox community*We don’t want YBX to be distributed to bot or inactive accounts.With the previously stated goals in mind, we are splitting our airdrop into three portions:Airdrop 1: Verified Lumenaut Airdrop — 4,000,000 YBX Allocated (September 9–October 22)The verified Lumenaut airdrop is our airdrop for registered YieldBlox community members. To participate in this airdrop, you must be part of our Discord community, and your Stellar mainnet account has to have been created before August 15, 2021. To register for this airdrop, please join our Discord and follow the instructions provided. Registration information will be provided at a later date. Community members have until the 21st of October to register. On the 22nd, we will divide 4,000,000 YBX among the registered participants by sending it directly to their wallets.DiscordAirdrop 2: Verified Yield Farmer Airdrop — 3,000,000 YBX Allocated (September 27 — October 15)The verified yield farmer airdrop is our airdrop for YieldBlox Testnet-Beta testers. Our testnet-beta will be released on September 27th. At this point, anyone can visit our YieldBlox web-app and request testnet asset tokens (Your Stellar mainnet account must have been created before August 15th). If your account qualifies we’ll send you asset tokens which can be used in the testnet YieldBlox protocol. You’ll earn YBX tokens for using the protocol on the testnet just like you would on the mainnet. After the end of a 18-day testing period, you’ll be able to exchange these testnet YBX tokens for mainnet YBX tokens. We’ll make markets for the underlying asset testnet tokens, so you’ll be able to carry out a wide range of yield farming strategies to maximize your YBX earned! Put on your yield farmer hats!Airdrop 3: Stellar Ecosystem Airdrop: 3,000,000 YBX allocated (September 9 — October 22)Anyone with a Stellar account created before August 15th can participate in this airdrop! You’ll be awarded tokens on October 22nd just by setting up a YBX trustline.Please note, to receive YBX from any of our airdrops you MUST set up a YBX trustline.Issuing account: GBUYYBXWCLT2MOSSHRFCKMEDFOVSCAXNIEW424GLN666OEXHAAWBDYMXSet up your YBX trustline today!On SCRIPTEEsAs many of you know, we issued 100 ScripTee NFT-shirts, 80 of which still need to be distributed. Here’s how we plan on distributing another 50 of them:Educational Content — 20 ScripTeesWe will be allocating 20 ScripTees to give away to community members who produce educational content on YieldBlox during September — December. Educational content can be podcasts, articles, Twitter threads, videos, Reddit posts… you name it! The only requirement is you put effort into them. Once you release them, just reach out, and we’ll award you your prize! We’re happy to answer questions for any content pieces you put together, so don’t hesitate to ask!Sam Conner Interview Attendees — 10 ScripTeesWe are planning to do an interview with Sam Conner (@samconnerone) prior to the beta launch. Ten random individuals from the live interview’s audience will be selected to win a ScripTee!Hidden NFTees — 10 ScripTeesWe’re hiding 10 ScripTee icons in our Discord, Keybase, Website, Protocol Accounts, and other content areas. If you find one, message us with a screenshot, and we’ll award you a ScripTee as your prize! These may not all be in place yet, so keep your eyes peeled as you read through our materials and browse our community channels for the image below!Pre-launch discord AMA — 10 ScripTeesWe will distribute 10 ScripTees to audience members in our pre-launch discord AMA! This has yet to be scheduled.What about the remaining 30 SCRIPTEE tokens?We haven’t decided how to release these yet. If you have any ideas, hop on one of our social media channels and let us know!Join our community!Twitter / DiscordEverything You Need to Know About the YBX Airdrop was originally published in script3 on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
  <entry>
    <title type="html">Project Venus — DeFi on Stellar using Turing Signing Servers</title>
    <published>2021-07-20T23:08:26+00:00</published>
    <updated>2021-07-20T23:08:26+00:00</updated>
    <id>https://medium.com/stellar-community/project-venus-defi-on-stellar-using-turing-signing-servers-61e3d1c0aedf?source=rss-445b9df7b1f9------2</id>
    <link rel="alternate" type="text/html" href="https://medium.com/stellar-community/project-venus-defi-on-stellar-using-turing-signing-servers-61e3d1c0aedf?source=rss-445b9df7b1f9------2"/>
    <author>
      <name>Script3</name>
    </author>
    <content type="html">Project Venus — DeFi on Stellar using Turing Signing ServersIntroductionIn May of 2020, Tyler van der Hoeven wrote a proposal for an experimental Stellar ecosystem smart contract engine called TSS (Turing Signing Servers). At Script3, we had been looking into building DeFi (Decentralized Finance) protocols on Stellar for a while, so we immediately got involved with the project. Once TSS became more of a reality, we partnered with SDF and JST Capital to create Project Venus, a DeFi FX short-term forwards protocol, as a proof of concept for TSS-based DeFi protocols.TSS OverviewTSS is a network of servers (called turrets) that store smart contracts and will build and sign transactions according to uploaded smart contract specifications at a user’s request. Users can upload smart contracts to any turret, and the turret will create a keypair that it will use to sign transactions generated by this smart contract then return the public key of that keypair to the user.Combining this network with Stellar’s multi-sig capabilities enables trustless DeFi protocols on Stellar. The developer uploads the DeFi protocol’s smart contracts to multiple trusted turrets and adds the associated public keys as signers on the protocol accounts. Next, the developer modifies the protocol account’s signer weights and thresholds to require most turrets to sign a transaction before it is valid. Then users can run the smart contract by running it across all turrets and aggregating the returned signatures until they have a sufficiently signed transaction.TSS thus enables trust-free DeFi protocols on Stellar without requiring an on-chain virtual machine. As a result, the smart contract engine adds no inordinate congestion to the network and retains the efficiency offered by Stellar.Initial Goals for Project VenusProject Venus was launched with two primary objectives in mind. First and most importantly, TSS needed to be vetted as secure and functional. Secondly, adding short-term forward contract capabilities to Stellar’s network could solve a long-term pain point for Stellar-based financial institutions.The TSS system is a radical departure from the smart contract engines typical in the DeFi ecosystem. Traditionally, engines follow the Ethereum Virtual Machine (EVM) model by having an on-chain virtual machine run smart contracts. This empowers the engine with ‘live’ access to the ledger state. Being on-chain also forces the contracts to obey the ledger state as the ledger is the only input the contracts have access to. The downside of this model is that running smart contracts on-chain is expensive in resources, time, and money.TSS attempts to eschew on-chain smart contract execution by running smart contracts on turrets. However, the off-chain nature of TSS smart contracts means they lose live ledger-state enforcement and ledger data access, which are vital for DeFi protocols. TSS enforces the ledger-state by still requiring transactions to be submitted to the ledger; if a transaction does not comply with the current ledger state, it is rejected. Stellar Horizon APIs provide access to ledger data so turrets can get near real-time information from the ledger. In theory, these are sufficient for TSS to host DeFi protocols, but further validation is needed to ensure protocols will function in this environment.Short-term forwards are a desirable utility in the Stellar ecosystem due to the capital efficiency they enable by allowing entities to lock in a price and delay settlement to a later time. As an added benefit, forwards introduce credit, which most financial systems are built on, to the Stellar ecosystem. Stellar-based remittance companies will be able to immediately take advantage of this service to improve their capital efficiency. Typically, companies that offer payments services separate their need for price discovery from their settlement of transactions. They want to ‘lock in’ their price for a trade with a client before receiving the funds from the client to settle the remittance.Historically, it has been difficult for Stellar’s remittance entities to provide quotes for clients because price discovery and settlement happen simultaneously on the Stellar DEX. Providing remittance companies the ability to enter smart forward contracts (SFCs) allows these entities to provide quotes to customers, locking in their price and profit, while providing them time to settle the trade-up until the time of the expiry of the SFC. Using SFC’s allows remittance companies to leverage the power of smart contracts and blockchain technology without changing their existing business workflow.Merging these goals was natural as a decentralized short-term forwards protocol on TSS provides a perfect scenario to validate TSS in the wild.Implementing and Testing with TSSBuilding a short-term forwards protocol on TSS came with a unique set of challenges. Relying on Stellar Horizon APIs to serve ledger data into smart contracts meant that we couldn’t be certain that the data provided by Horizon would be consistent or correct across all turrets running the smart contract. We handled this by coding our smart contracts to allow unexpected things to happen but not allow unacceptable things to happen.In practice, this design means that we’d force the generated transaction to fail if an unacceptable outcome occurred. For example, at the end of each settlement period, the Venus protocol re-balances the assets in its settlement pool by trading overweight assets for underweight assets on the DEX. We use pathPayment operations to accomplish this and set an acceptable slippage threshold so that if DEX prices artificially drop between transaction creation and transaction submission, the smart contract must be re-run, allowing prices to normalize.The signer limitation on Stellar also caused some difficulties when building smart contracts. Stellar has a limit of 20 signers per account since each turret running smart contracts for an account must be a signer on said account. This signer limit also limits the number of smart contracts we can use in a protocol and the number of turrets we can upload the smart contract to. To work around these limitations, we ended up consolidating some of our smart contracts into one large contract that performs multiple protocol operations. In the future, I’d like to see this issue fixed by further exploring the musig (https://github.com/future-tense/stellar-musig) system and allowing it to work with M-of-N signers rather than M-of-M.Despite some growing pains, an immense advantage TSS provides is being able to build contracts with any web assembly compatible language. In the space of DeFi, a lot of pressure is applied to the user to comprehend the smart contract they are entering. They need to know what it does, if it’s secure, and what to expect before they can safely enter the contract. Digesting this with a young, limited language like Solidity is difficult for the average user. Being able to write smart contracts in Typescript/Javascript provides users a much easier-to-digest contract that they can then truly understand. Further, using mature programming languages comes with robust best practices and testing mechanics that help build readable, trustworthy contracts.Testing protocols on TSS proved to be a smooth, familiar experience. Getting a turret test environment is as easy as deploying a turret out to the Stellar testnet. This is exciting because it means that you can run integration-level tests against a real turret! Contract developers can utilize this near-production test environment to ensure a seamless transition to the mainnet once their contract is ready. In addition, TSS takes advantage of common serverless tools like AWS Lambda that have been a key tool in developer’s toolbox recently. Monitoring, debugging, and getting insight into contract performance in a turret will feel like second nature to those familiar with serverless compute frameworks.What is Next with TSS and DeFi on StellarDeFi and TSS can completely transform the Stellar ecosystem. Stellar’s focus on efficiency and supporting traditional finance create excellent synergies that could allow the DeFi ecosystem to truly integrate with traditional finance. There are a few logical next steps necessary to realize this potential. At Script3, we’re already pushing some of these changes forward ourselves, but we would love to see more ecosystem organizations get involved! If you’re part of an organization interested in helping build the TSS ecosystem, don’t hesitate to reach out!First of all, the ecosystem needs to decide upon standardized best practices for turret providers. Turrets are the backbone of this smart contract engine. They need to be secure, reliable, fast, and cheap. These goals are achievable, and standardized best practices will help turret providers satisfy these requirements and make it easier for smart contract developers to recognize quality turrets.Additionally, the ecosystem needs to create a standardized custom Horizon implementation that turrets are expected to provide. Proper ledger data access is essential for TSS smart contracts. Smart contracts must have guaranteed access to Horizon and the ability to filter out potential transaction spam so their smart contracts aren’t disrupted. If a turret could locally access a Horizon instance, it would greatly cut down on the risk of Horizon ever being inaccessible by smart contracts. A custom implementation would also allow smart contracts to make more specific, secure ledger data queries.Finally, we’d like to see some of the projects anchoring regulated financial assets on Stellar work to support smart contract protocols. Stellar’s blockchain is arguably the best-equipped to handle traditional financial assets such as stocks, bonds, and mutual funds. Encouraging these asset anchors to work with DeFi projects to add regulated assets to smart contract protocols would make a Stellar DeFi ecosystem the most useful one in the space and greatly expand upon Stellar’s goal of sponsoring global economic accessibility.Project Venus — DeFi on Stellar using Turing Signing Servers was originally published in Stellar Community on Medium, where people are continuing the conversation by highlighting and responding to this story.</content>
  </entry>
</feed>
